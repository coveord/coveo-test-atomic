{"version":3,"names":["atomicIpxRecsListCss","AtomicIpxRecsListStyle0","AtomicIPXRecsList","this","loadingFlag","randomID","resultTemplateRegistered","templateHasError","currentPage","recommendation","display","gridCellLinkTarget","density","imageSize","numberOfRecommendations","headingLevel","watchNumberOfRecommendationsPerPage","setRenderFunction","resultRenderingFunction","itemRenderingFunction","previousPage","numberOfPages","nextPage","initialize","validateNumberOfRecommendationsPerPage","validateRecommendationIdentifier","updateOriginLevel2","recommendationList","buildRecommendationList","bindings","engine","options","id","itemTemplateProvider","ItemTemplateProvider","includeDefaultTemplate","templateElements","Array","from","host","querySelectorAll","getResultTemplateRegistered","getTemplateHasError","setResultTemplateRegistered","value","setTemplateHasError","itemListCommon","ItemListCommon","engineSubscribe","subscribe","getCurrentNumberOfItems","recommendationListState","recommendations","length","getIsLoading","isLoading","nextNewItemTarget","focusTarget","store","actionsHistoryActions","loadIPXActionsHistoryActions","nextNewResultTarget","FocusTargetController","recommendationListStateWithAugment","firstRequestExecuted","searchResponseId","hasError","error","hasItems","results","subsetRecommendations","msg","NumberValue","min","max","validate","numberOfRecommendationsPerPage","Error","recListWithRecommendation","document","logger","warn","label","action","loadConfigurationActions","setOriginLevel2","originLevel2","dispatch","renderHeading","h","Heading","level","part","class","i18n","t","currentIndex","Math","abs","slice","ceil","hasPagination","shouldRenderPagination","onSelect","originalSelect","raw","permanentid","addPageViewEntryInActionsHistory","getPropsForAtomicRecsResult","interactiveResult","buildRecsInteractiveResult","result","select","renderingFunction","key","getResultId","uniqueId","content","getTemplateContent","computeListDisplayClasses","displayPlaceholders","isAppLoaded","getItemListDisplayClasses","renderAsGrid","i","propsForAtomicRecsResult","DisplayGrid","item","gridTarget","setRef","element","setNewResultRef","renderListOfRecommendations","updateBreakpoints","listClasses","DisplayWrapper","ResultsPlaceholdersGuard","numberOfPlaceholders","_a","ItemDisplayGuard","map","render","Fragment","Carousel","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/ipx/atomic-ipx-recs-list/atomic-recs-list/atomic-ipx-recs-list.pcss?tag=atomic-ipx-recs-list&encapsulation=shadow","src/components/ipx/atomic-ipx-recs-list/atomic-recs-list/atomic-ipx-recs-list.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n@import '../../../common/item-list/styles/mixins.pcss';\n@import '../../../common/item-list/styles/placeholders.pcss';\n\n@mixin atomic-grid-clickable-elements;\n@mixin atomic-grid-display-common;\n\n:host {\n  display: block;\n}\n\n/**\n * @prop --atomic-recs-number-of-columns: Number of columns for the recommendation list.\n */\n.list-root {\n  @mixin atomic-grid-with-cards;\n  grid-template-columns: repeat(var(--atomic-recs-number-of-columns, 1), minmax(0, 1fr));\n}\n\n[part='label'] {\n  font-family: var(--atomic-font-family);\n  font-size: var(--atomic-text-2xl);\n  font-weight: var(--atomic-font-bold);\n}\n","import {NumberValue} from '@coveo/bueno';\nimport {\n  IPXActionsHistoryActionCreators,\n  loadIPXActionsHistoryActions,\n} from '@coveo/headless';\nimport {\n  buildRecommendationList,\n  RecommendationList,\n  RecommendationListState,\n  loadConfigurationActions,\n} from '@coveo/headless/recommendation';\nimport {\n  Component,\n  State,\n  Element,\n  Prop,\n  Method,\n  h,\n  Fragment,\n  Watch,\n} from '@stencil/core';\nimport {\n  ItemRenderingFunction,\n  ItemDisplayBasicLayout,\n  ItemTarget,\n  ItemDisplayDensity,\n  ItemDisplayImageSize,\n} from '../../../../components';\nimport {FocusTargetController} from '../../../../utils/accessibility-utils';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n  BindStateToController,\n} from '../../../../utils/initialization-utils';\nimport {randomID} from '../../../../utils/utils';\nimport {ResultsPlaceholdersGuard} from '../../../common/atomic-result-placeholder/placeholders';\nimport {Carousel} from '../../../common/carousel';\nimport {Heading} from '../../../common/heading';\nimport {DisplayGrid} from '../../../common/item-list/display-grid';\nimport {DisplayWrapper} from '../../../common/item-list/display-wrapper';\nimport {ItemDisplayGuard} from '../../../common/item-list/item-display-guard';\nimport {ItemListCommon} from '../../../common/item-list/item-list-common';\nimport {ItemTemplateProvider} from '../../../common/item-list/item-template-provider';\nimport {getItemListDisplayClasses} from '../../../common/layout/display-options';\nimport {RecsResult, buildRecsInteractiveResult} from '../../../recommendations';\nimport {RecsBindings} from '../../../recommendations/atomic-recs-interface/atomic-recs-interface';\n\n/**\n * The `atomic-ipx-recs-list` component displays recommendations by applying one or more result templates.\n *\n * @part result-list - The element containing the list of results.\n * @part result-list-grid-clickable-container - The parent of the result & the clickable link encompassing it.\n * @part result-list-grid-clickable - The clickable link encompassing the result.\n * @part label - The label of the result list.\n * @part previous-button - The previous button.\n * @part next-button - The next button.\n * @part indicators - The list of indicators.\n * @part indicator - A single indicator.\n * @part active-indicator - The active indicator.\n * @internal\n */\n@Component({\n  tag: 'atomic-ipx-recs-list',\n  styleUrl: 'atomic-ipx-recs-list.pcss',\n  shadow: true,\n})\nexport class AtomicIPXRecsList implements InitializableComponent<RecsBindings> {\n  @InitializeBindings() public bindings!: RecsBindings;\n  public recommendationList!: RecommendationList;\n  private loadingFlag = randomID('firstRecommendationLoaded-');\n  private itemRenderingFunction: ItemRenderingFunction;\n  private itemTemplateProvider!: ItemTemplateProvider;\n  private nextNewResultTarget?: FocusTargetController;\n  private itemListCommon!: ItemListCommon;\n  private actionsHistoryActions?: IPXActionsHistoryActionCreators;\n\n  @Element() public host!: HTMLDivElement;\n\n  @State() public error!: Error;\n  @State() private resultTemplateRegistered = false;\n  @State() private templateHasError = false;\n  @State() private currentPage = 0;\n  @BindStateToController('recommendationList')\n  @State()\n  public recommendationListState!: RecommendationListState;\n\n  /**\n   * The Recommendation identifier used by the Coveo platform to retrieve recommended documents.\n   * Make sure to set a different value for each atomic-ipx-recs-list in your page.\n   */\n  @Prop({reflect: true}) public recommendation = 'Recommendation';\n\n  /**\n   * The layout to apply when displaying results themselves. This does not affect the display of the surrounding list itself.\n   * To modify the number of recommendations per column, modify the --atomic-recs-number-of-columns CSS variable.\n   */\n  @Prop({reflect: true}) public display: ItemDisplayBasicLayout = 'list';\n  /**\n   * The target location to open the result link (see [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target)).\n   * This property is only leveraged when `display` is `grid`.\n   * @defaultValue `_self`\n   */\n  @Prop() gridCellLinkTarget: ItemTarget = '_self';\n  /**\n   * The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result.\n   */\n  @Prop({reflect: true}) public density: ItemDisplayDensity = 'normal';\n  /**\n   * The expected size of the image displayed in the results.\n   */\n  @Prop({reflect: true})\n  public imageSize: ItemDisplayImageSize = 'small';\n\n  /**\n   * The total number of recommendations to display.\n   * This does not modify the number of recommendations per column. To do so, modify the --atomic-recs-number-of-columns CSS variable.\n   */\n  @Prop({reflect: true}) public numberOfRecommendations = 10;\n\n  /**\n   * The number of recommendations to display, per page.\n   * Setting a value greater than and lower than the numberOfRecommendations value activates the carousel.\n   * This does not affect the display of the list itself, only the number of recommendation pages.\n   */\n  @Prop({reflect: true}) public numberOfRecommendationsPerPage?: number;\n\n  /**\n   * The non-localized label for the list of recommendations.\n   */\n  @Prop({reflect: true}) public label?: string;\n\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading label, from 1 to 6.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n\n  @Watch('numberOfRecommendationsPerPage')\n  public async watchNumberOfRecommendationsPerPage() {\n    this.currentPage = 0;\n  }\n\n  /**\n   * Sets a rendering function to bypass the standard HTML template mechanism for rendering results.\n   * You can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n   *\n   * Do not use this method if you integrate Atomic in a plain HTML deployment.\n   *\n   * @param resultRenderingFunction\n   */\n  @Method() public async setRenderFunction(\n    resultRenderingFunction: ItemRenderingFunction\n  ) {\n    this.itemRenderingFunction = resultRenderingFunction;\n  }\n\n  /**\n   * Moves to the previous page, when the carousel is activated.\n   */\n  @Method() public async previousPage() {\n    this.currentPage =\n      this.currentPage - 1 < 0 ? this.numberOfPages - 1 : this.currentPage - 1;\n  }\n\n  /**\n   * Moves to the next page, when the carousel is activated.\n   */\n  @Method() public async nextPage() {\n    this.currentPage = (this.currentPage + 1) % this.numberOfPages;\n  }\n\n  public initialize() {\n    this.validateNumberOfRecommendationsPerPage();\n    this.validateRecommendationIdentifier();\n    this.updateOriginLevel2();\n    this.recommendationList = buildRecommendationList(this.bindings.engine, {\n      options: {\n        id: this.recommendation,\n        numberOfRecommendations: this.numberOfRecommendations,\n      },\n    });\n\n    this.itemTemplateProvider = new ItemTemplateProvider({\n      includeDefaultTemplate: true,\n      templateElements: Array.from(\n        this.host.querySelectorAll('atomic-recs-result-template')\n      ),\n      getResultTemplateRegistered: () => this.resultTemplateRegistered,\n      getTemplateHasError: () => this.templateHasError,\n      setResultTemplateRegistered: (value: boolean) => {\n        this.resultTemplateRegistered = value;\n      },\n      setTemplateHasError: (value: boolean) => {\n        this.templateHasError = value;\n      },\n      bindings: this.bindings,\n    });\n\n    this.itemListCommon = new ItemListCommon({\n      engineSubscribe: this.bindings.engine.subscribe,\n      getCurrentNumberOfItems: () =>\n        this.recommendationListState.recommendations.length,\n      getIsLoading: () => this.recommendationListState.isLoading,\n      host: this.host,\n      loadingFlag: this.loadingFlag,\n      nextNewItemTarget: this.focusTarget,\n      store: this.bindings.store,\n    });\n    this.actionsHistoryActions = loadIPXActionsHistoryActions(\n      this.bindings.engine\n    );\n  }\n\n  public get focusTarget() {\n    if (!this.nextNewResultTarget) {\n      this.nextNewResultTarget = new FocusTargetController(this);\n    }\n    return this.nextNewResultTarget;\n  }\n\n  private get recommendationListStateWithAugment() {\n    return {\n      ...this.recommendationListState,\n      firstRequestExecuted:\n        this.recommendationListState.searchResponseId !== '',\n      hasError: this.recommendationListState.error !== null,\n      hasItems: this.recommendationListState.recommendations.length !== 0,\n      results: this.subsetRecommendations,\n    };\n  }\n\n  private validateNumberOfRecommendationsPerPage() {\n    const msg = new NumberValue({\n      min: 1,\n      max: this.numberOfRecommendations - 1,\n    }).validate(this.numberOfRecommendationsPerPage!);\n\n    if (msg) {\n      this.error = new Error(\n        `The \"numberOfRecommendationsPerPage\" is invalid: ${msg}`\n      );\n    }\n  }\n\n  private validateRecommendationIdentifier() {\n    const recListWithRecommendation = document.querySelectorAll(\n      `atomic-ipx-recs-list[recommendation=\"${this.recommendation}\"]`\n    );\n\n    if (recListWithRecommendation.length > 1) {\n      this.bindings.engine.logger.warn(\n        `There are multiple atomic-ipx-recs-list in this page with the same recommendation property \"${this.recommendation}\". Make sure to set a different recommendation property for each.`\n      );\n    }\n  }\n\n  private updateOriginLevel2() {\n    if (this.label) {\n      const action = loadConfigurationActions(\n        this.bindings.engine\n      ).setOriginLevel2({\n        originLevel2: this.label,\n      });\n\n      this.bindings.engine.dispatch(action);\n    }\n  }\n\n  private renderHeading() {\n    if (!this.label) {\n      return;\n    }\n\n    if (this.recommendationListStateWithAugment.hasError) {\n      return;\n    }\n\n    if (\n      this.recommendationListStateWithAugment.firstRequestExecuted &&\n      !this.recommendationListStateWithAugment.hasItems\n    ) {\n      return;\n    }\n\n    return (\n      <Heading level={this.headingLevel} part=\"label\" class=\"m-0 mb-2\">\n        {this.bindings.i18n.t(this.label)}\n      </Heading>\n    );\n  }\n\n  private get currentIndex() {\n    return Math.abs(\n      (this.currentPage * this.numberOfRecommendationsPerPage!) %\n        this.recommendationListState.recommendations.length\n    );\n  }\n\n  private get subsetRecommendations() {\n    if (!this.numberOfRecommendationsPerPage) {\n      return this.recommendationListState.recommendations;\n    }\n\n    return this.recommendationListState.recommendations.slice(\n      this.currentIndex,\n      this.currentIndex + this.numberOfRecommendationsPerPage\n    );\n  }\n\n  private get numberOfPages() {\n    return Math.ceil(\n      this.recommendationListState.recommendations.length /\n        this.numberOfRecommendationsPerPage!\n    );\n  }\n\n  private get hasPagination() {\n    return !!this.numberOfRecommendationsPerPage;\n  }\n\n  private get shouldRenderPagination() {\n    return (\n      this.hasPagination && this.recommendationListStateWithAugment.hasItems\n    );\n  }\n\n  private async onSelect(\n    recommendation: RecsResult,\n    originalSelect: () => void\n  ) {\n    if (recommendation.raw.permanentid && this.actionsHistoryActions) {\n      const action =\n        this.actionsHistoryActions.addPageViewEntryInActionsHistory(\n          recommendation.raw.permanentid\n        );\n      this.bindings.engine.dispatch(action);\n    }\n    originalSelect();\n  }\n\n  private getPropsForAtomicRecsResult(recommendation: RecsResult) {\n    const interactiveResult = buildRecsInteractiveResult(this.bindings.engine, {\n      options: {result: recommendation},\n    });\n    const originalSelect = interactiveResult.select;\n    interactiveResult.select = () => {\n      this.onSelect(recommendation, originalSelect);\n    };\n    return {\n      interactiveResult,\n      result: recommendation,\n      renderingFunction: this.itemRenderingFunction,\n      loadingFlag: this.loadingFlag,\n      key: this.itemListCommon.getResultId(\n        recommendation.uniqueId,\n        this.recommendationListState.searchResponseId,\n        this.density,\n        this.imageSize\n      ),\n      content: this.itemTemplateProvider.getTemplateContent(recommendation),\n      store: this.bindings.store,\n      density: this.density,\n      display: this.display,\n      imageSize: this.imageSize,\n    };\n  }\n\n  private computeListDisplayClasses() {\n    const displayPlaceholders = !this.bindings.store.isAppLoaded();\n\n    return getItemListDisplayClasses(\n      'grid',\n      this.density,\n      this.imageSize,\n      this.recommendationListState.isLoading,\n      displayPlaceholders\n    );\n  }\n\n  private renderAsGrid(recommendation: RecsResult, i: number) {\n    const propsForAtomicRecsResult =\n      this.getPropsForAtomicRecsResult(recommendation);\n    return (\n      <DisplayGrid\n        item={recommendation}\n        gridTarget={this.gridCellLinkTarget}\n        {...propsForAtomicRecsResult.interactiveResult}\n        setRef={(element) =>\n          element && this.itemListCommon.setNewResultRef(element, i)\n        }\n      >\n        <atomic-recs-result {...propsForAtomicRecsResult}></atomic-recs-result>\n      </DisplayGrid>\n    );\n  }\n\n  private renderListOfRecommendations() {\n    this.itemListCommon.updateBreakpoints();\n    const listClasses = this.computeListDisplayClasses();\n\n    if (\n      !this.resultTemplateRegistered ||\n      this.itemTemplateProvider.hasError ||\n      this.error\n    ) {\n      return;\n    }\n\n    return (\n      <DisplayWrapper listClasses={listClasses} display=\"grid\">\n        <ResultsPlaceholdersGuard\n          density={this.density}\n          display={this.display}\n          imageSize={this.imageSize}\n          displayPlaceholders={!this.bindings.store.isAppLoaded()}\n          numberOfPlaceholders={\n            this.numberOfRecommendationsPerPage ?? this.numberOfRecommendations\n          }\n        ></ResultsPlaceholdersGuard>\n        <ItemDisplayGuard {...this.recommendationListStateWithAugment}>\n          {this.subsetRecommendations.map((recommendation, i) => {\n            return this.renderAsGrid(recommendation, i);\n          })}\n        </ItemDisplayGuard>\n      </DisplayWrapper>\n    );\n  }\n\n  public render() {\n    return (\n      <Fragment>\n        {this.renderHeading()}\n        {this.shouldRenderPagination ? (\n          <Carousel\n            bindings={this.bindings}\n            currentPage={this.currentPage}\n            nextPage={() => this.nextPage()}\n            previousPage={() => this.previousPage()}\n            numberOfPages={this.numberOfPages}\n          >\n            {this.renderListOfRecommendations()}\n          </Carousel>\n        ) : (\n          this.renderListOfRecommendations()\n        )}\n      </Fragment>\n    );\n  }\n}\n"],"mappings":"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"}
{"version":3,"names":["possiblyWarnOnBadFieldType","field","itemValueRaw","host","logger","isArray","error","nodeName","toLowerCase","ItemTextFallback","defaultValue","item","getProperty","children","raw","isUndefined","remove","h","Fragment","renderWithHighlights","value","highlights","highlightString","openingDelimiter","closingDelimiter","highlightedValue","content","replace","RegExp","ItemTextHighlighted","highlightKeywords","onError","textValue","Host","innerHTML"],"sources":["src/components/common/item-text/field-warning.ts","src/components/common/item-text/item-text-fallback.tsx","src/components/common/item-text/render-highlights.ts","src/components/common/item-text/item-text-highlighted.tsx"],"sourcesContent":["import {isArray} from '@coveo/bueno';\n\nexport function possiblyWarnOnBadFieldType(\n  field: string,\n  itemValueRaw: unknown,\n  host: HTMLElement,\n  logger: Pick<Console, 'error'>\n) {\n  if (isArray(itemValueRaw)) {\n    logger.error(\n      `${host.nodeName.toLowerCase()} cannot be used with multi value field \"${field}\" with values \"${itemValueRaw}\".`,\n      host\n    );\n  }\n}\n","import {isUndefined} from '@coveo/bueno';\nimport {Fragment, FunctionalComponent, VNode, h} from '@stencil/core';\nimport {possiblyWarnOnBadFieldType} from './field-warning';\n\nexport interface ItemTextProps<T> {\n  logger: Pick<Console, 'error'>;\n  host: HTMLElement;\n  defaultValue: string | undefined;\n  field: string;\n  item: T;\n  getProperty: (result: T, property: string) => unknown;\n}\n\nexport const ItemTextFallback = <T,>(\n  {field, host, logger, defaultValue, item, getProperty}: ItemTextProps<T>,\n  children: VNode[]\n): FunctionalComponent<ItemTextProps<T>> | null => {\n  const raw = getProperty(item, field);\n  possiblyWarnOnBadFieldType(field, raw, host, logger);\n\n  if (isUndefined(defaultValue)) {\n    host.remove();\n    return null;\n  } else {\n    return <Fragment>{children}</Fragment>;\n  }\n};\n","export type HighlightKeywords = {\n  offset: number;\n  length: number;\n};\n\nexport type HighlightString = (params: {\n  content: string;\n  openingDelimiter: string;\n  closingDelimiter: string;\n  highlights: HighlightKeywords[];\n}) => string;\n\nexport function renderWithHighlights(\n  value: string,\n  highlights: HighlightKeywords[],\n  highlightString: HighlightString\n) {\n  const openingDelimiter = '_openingDelimiter_';\n  const closingDelimiter = '_closingDelimiter_';\n  const highlightedValue = highlightString({\n    content: value,\n    openingDelimiter,\n    closingDelimiter,\n    highlights,\n  });\n  return highlightedValue\n    .replace(new RegExp(openingDelimiter, 'g'), '<b>')\n    .replace(new RegExp(closingDelimiter, 'g'), '</b>');\n}\n","import {FunctionalComponent, h, Host} from '@stencil/core';\nimport {\n  HighlightKeywords,\n  HighlightString,\n  renderWithHighlights,\n} from './render-highlights';\n\nexport interface ItemTextHighlightedProps {\n  textValue: string;\n  highlightKeywords: HighlightKeywords[];\n  onError: (error: Error) => void;\n  highlightString: HighlightString;\n}\n\nexport const ItemTextHighlighted: FunctionalComponent<\n  ItemTextHighlightedProps\n> = ({highlightKeywords, highlightString, onError, textValue}) => {\n  try {\n    const highlightedValue = renderWithHighlights(\n      textValue,\n      highlightKeywords,\n      highlightString\n    );\n\n    // deepcode ignore ReactSetInnerHtml: This is not React code\n    return <Host innerHTML={highlightedValue}></Host>;\n  } catch (error) {\n    onError(error as Error);\n  }\n};\n"],"mappings":"sGAEgBA,EACdC,EACAC,EACAC,EACAC,GAEA,GAAIC,EAAQH,GAAe,CACzBE,EAAOE,MACL,GAAGH,EAAKI,SAASC,wDAAwDP,mBAAuBC,MAChGC,E,CAGN,C,MCDaM,EAAmB,EAC7BR,QAAOE,OAAMC,SAAQM,eAAcC,OAAMC,eAC1CC,KAEA,MAAMC,EAAMF,EAAYD,EAAMV,GAC9BD,EAA2BC,EAAOa,EAAKX,EAAMC,GAE7C,GAAIW,EAAYL,GAAe,CAC7BP,EAAKa,SACL,OAAO,I,KACF,CACL,OAAOC,EAACC,EAAQ,KAAEL,E,YCZNM,EACdC,EACAC,EACAC,GAEA,MAAMC,EAAmB,qBACzB,MAAMC,EAAmB,qBACzB,MAAMC,EAAmBH,EAAgB,CACvCI,QAASN,EACTG,mBACAC,mBACAH,eAEF,OAAOI,EACJE,QAAQ,IAAIC,OAAOL,EAAkB,KAAM,OAC3CI,QAAQ,IAAIC,OAAOJ,EAAkB,KAAM,OAChD,C,MCdaK,EAET,EAAEC,oBAAmBR,kBAAiBS,UAASC,gBACjD,IACE,MAAMP,EAAmBN,EACvBa,EACAF,EACAR,GAIF,OAAOL,EAACgB,EAAI,CAACC,UAAWT,G,CACxB,MAAOnB,GACPyB,EAAQzB,E"}
{"version":3,"names":["CommerceSortOption","props","sort","label","getLabel","h","SortOption","value","by","fields","map","sortByField","displayName","name","join","getSortByLabel","availableSorts","sortByLabel","forEach","availableSort"],"sources":["src/components/commerce/sort/option.tsx"],"sourcesContent":["import {SortCriterion} from '@coveo/headless/commerce';\nimport {FunctionalComponent, h} from '@stencil/core';\nimport {SortOption, SortOptionProps} from '../../common/sort/option';\n\ninterface CommerceSortOptionProps\n  extends Omit<SortOptionProps, 'label' | 'value'> {\n  sort: SortCriterion;\n}\nexport const CommerceSortOption: FunctionalComponent<\n  CommerceSortOptionProps\n> = (props) => {\n  const {sort} = props;\n  const label = getLabel(sort);\n\n  return <SortOption {...props} label={label} value={label} />;\n};\n\nexport function getLabel(sort: SortCriterion) {\n  if (sort.by === 'relevance') {\n    return 'relevance';\n  } else {\n    return sort.fields\n      .map((sortByField) => {\n        return sortByField.displayName || sortByField.name;\n      })\n      .join(' ');\n  }\n}\n\nexport function getSortByLabel(label: string, availableSorts: SortCriterion[]) {\n  const sortByLabel: Record<string, SortCriterion> = {};\n  availableSorts.forEach((availableSort) => {\n    sortByLabel[getLabel(availableSort)] = availableSort;\n  });\n\n  return sortByLabel[label];\n}\n"],"mappings":"8EAQaA,EAERC,IACH,MAAMC,KAACA,GAAQD,EACf,MAAME,EAAQC,EAASF,GAEvB,OAAOG,EAACC,EAAU,IAAKL,EAAOE,MAAOA,EAAOI,MAAOJ,GAAS,E,SAG9CC,EAASF,GACvB,GAAIA,EAAKM,KAAO,YAAa,CAC3B,MAAO,W,KACF,CACL,OAAON,EAAKO,OACTC,KAAKC,GACGA,EAAYC,aAAeD,EAAYE,OAE/CC,KAAK,I,CAEZ,C,SAEgBC,EAAeZ,EAAea,GAC5C,MAAMC,EAA6C,GACnDD,EAAeE,SAASC,IACtBF,EAAYb,EAASe,IAAkBA,CAAa,IAGtD,OAAOF,EAAYd,EACrB,Q"}
{"version":3,"names":["atomicCategoryFacetCss","AtomicCategoryFacetStyle0","AtomicCategoryFacet","this","resultIndexToFocusOnShowMore","label","numberOfValues","withSearch","sortCriteria","delimitingCharacter","basePath","filterByBasePath","isCollapsed","headingLevel","filterFacetCount","injectionDepth","dependsOn","initialize","searchStatus","buildSearchStatus","bindings","engine","options","facetId","field","facetSearch","facet","buildCategoryFacet","announceFacetSearchResultsWithAriaLive","msg","facetSearchAriaMessage","i18n","state","facetInfo","t","element","host","isHidden","store","registerFacet","initializePopover","hasValues","values","length","numberOfActiveValues","facetState","hasActiveValues","initializeDependenciesManager","focusTargets","showLessFocus","FocusTargetController","showMoreFocus","headerFocus","activeValueFocus","disconnectedCallback","isConnected","_a","dependenciesManager","stopWatching","searchStatusState","hasError","enabled","parents","componentShouldUpdate","next","prev","propName","isCategoryFacetState","shouldUpdateFacetSearchComponent","hasParents","buildFacetConditionsManager","conditions","parseDependsOn","renderHeader","h","FacetHeader","onToggleCollapse","onClearFilters","focusAfterSearch","deselectAll","headerRef","header","setTarget","renderSearchInput","FacetSearchInput","query","onChange","value","clear","updateCaptions","getFieldCaptions","updateText","search","onClear","renderValuesTree","isRoot","renderChildren","CategoryFacetTreeValueContainer","CategoryFacetAllCategoryButton","onClick","CategoryFacetParentAsTreeContainer","isTopLevel","parentValue","CategoryFacetParentButton","facetValue","toggleSelect","slice","activeParent","activeParentDisplayValue","getFieldValueCaption","CategoryFacetParentValueLink","displayValue","numberOfResults","isLeafValue","searchQuery","setRef","el","CategoryFacetChildrenAsTreeContainer","renderChild","isShowLessFocusTarget","isShowMoreFocusTarget","isSelected","CategoryFacetChildValueLink","map","i","renderSearchResults","CategoryFacetSearchResultsContainer","CategoryFacetSearchValue","select","renderMatches","FacetSearchMatches","numberOfMatches","hasMoreMatches","moreValuesAvailable","showMoreMatches","showMoreResults","renderShowMoreLess","class","FacetShowMoreLess","onShowMore","showMoreValues","onShowLess","showLessValues","canShowLessValues","canShowMoreValues","render","valuesAsTrees","firstSearchExecuted","FacetGuard","key","hasResults","FacetContainer","shouldDisplaySearchResults","Fragment","FacetValuesGroup","className","FacetPlaceholder","__decorate","InitializeBindings","BindStateToController","ArrayProp","MapProp","AriaLiveRegion"],"sources":["src/components/search/facets/atomic-category-facet/atomic-category-facet.pcss?tag=atomic-category-facet&encapsulation=shadow","src/components/search/facets/atomic-category-facet/atomic-category-facet.tsx"],"sourcesContent":["@import '../../../common/facets/facet-common.pcss';\n@import '../../../common/facets/facet-search/facet-search.pcss';\n\n[part~='active-parent'] {\n  @apply pl-9;\n}\n\n[part~='parents'] [part~='values'] {\n  @apply pl-9;\n}\n\n[part~='all-categories-button'],\n[part~='parent-button'] {\n  @apply w-full py-2.5 pr-2 pl-7 text-left relative flex items-center;\n}\n\n[part~='back-arrow'] {\n  @apply h-5 w-5 absolute left-1;\n}\n","import {\n  CategoryFacet,\n  buildCategoryFacet,\n  CategoryFacetState,\n  CategoryFacetOptions,\n  CategoryFacetSortCriterion,\n  SearchStatus,\n  SearchStatusState,\n  buildSearchStatus,\n  CategoryFacetValue,\n  buildFacetConditionsManager,\n  FacetConditionsManager,\n  FacetValueRequest,\n  CategoryFacetValueRequest,\n} from '@coveo/headless';\nimport {Component, h, State, Prop, Element, Fragment} from '@stencil/core';\nimport {\n  AriaLiveRegion,\n  FocusTargetController,\n} from '../../../../utils/accessibility-utils';\nimport {\n  getFieldCaptions,\n  getFieldValueCaption,\n} from '../../../../utils/field-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {ArrayProp, MapProp} from '../../../../utils/props-utils';\nimport {CategoryFacetAllCategoryButton} from '../../../common/facets/category-facet/all-categories-button';\nimport {CategoryFacetChildValueLink} from '../../../common/facets/category-facet/child-value-link';\nimport {CategoryFacetChildrenAsTreeContainer} from '../../../common/facets/category-facet/children-as-tree-container';\nimport {CategoryFacetParentAsTreeContainer} from '../../../common/facets/category-facet/parent-as-tree-container';\nimport {CategoryFacetParentButton} from '../../../common/facets/category-facet/parent-button';\nimport {CategoryFacetParentValueLink} from '../../../common/facets/category-facet/parent-value-link';\nimport {CategoryFacetSearchResultsContainer} from '../../../common/facets/category-facet/search-results-container';\nimport {CategoryFacetSearchValue} from '../../../common/facets/category-facet/search-value';\nimport {CategoryFacetTreeValueContainer} from '../../../common/facets/category-facet/value-as-tree-container';\nimport {parseDependsOn} from '../../../common/facets/depends-on';\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\nimport {FacetGuard} from '../../../common/facets/facet-guard';\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\nimport {announceFacetSearchResultsWithAriaLive} from '../../../common/facets/facet-search/facet-search-aria-live';\nimport {FacetSearchInput} from '../../../common/facets/facet-search/facet-search-input';\nimport {FacetSearchMatches} from '../../../common/facets/facet-search/facet-search-matches';\nimport {\n  shouldUpdateFacetSearchComponent,\n  shouldDisplaySearchResults,\n} from '../../../common/facets/facet-search/facet-search-utils';\nimport {FacetShowMoreLess} from '../../../common/facets/facet-show-more-less/facet-show-more-less';\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/facet-values-group';\nimport {initializePopover} from '../../../common/facets/popover/popover-type';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\n * An `atomic-category-facet` displays a facet of values in a browsable, hierarchical fashion.\n *\n * @part facet - The wrapper for the entire facet.\n * @part placeholder - The placeholder shown before the first search is executed.\n *\n * @part label-button - The button that displays the label and allows to expand/collapse the facet.\n * @part label-button-icon - The label button icon.\n *\n * @part search-wrapper - The search box wrapper.\n * @part search-input - The search box input.\n * @part search-icon - The search box submit button.\n * @part search-clear-button - The button to clear the search box of input.\n * @part more-matches - The label indicating there are more matches for the current facet search query.\n * @part no-matches - The label indicating there are no matches for the current facet search query.\n * @part matches-query - The highlighted query inside the matches labels.\n * @part search-results - The search results container.\n * @part search-result - The search result value.\n * @part search-result-path - The search result path.\n * @part search-highlight - The highlighted query inside the facet values.\n *\n * @part parents - The container surrounding the whole hierarchy of values.\n * @part sub-parents - The container surrounding a sub-hierarchy of values.\n * @part values - The container surrounding either the children of the active value or the values at the base.\n * @part all-categories-button - The \"View all\" button displayed first within the parents.\n * @part parent-button - The clickable parent button displayed first within sub-parents.\n * @part active-parent - The clickable active parent displayed first within the last sub-parents.\n * @part value-link - The clickable value displayed first within values.\n * @part back-arrow - The back arrow displayed before the clickable parents.\n * @part value-label - The facet value label within a value button.\n * @part value-count - The facet value count within a value button.\n * @part leaf-value - A facet value with no child value.\n * @part node-value - A facet value with child values.\n *\n * @part show-more - The show more results button.\n * @part show-less - The show less results button.\n * @part show-more-less-icon - The icons of the show more & show less buttons.\n */\n@Component({\n  tag: 'atomic-category-facet',\n  styleUrl: 'atomic-category-facet.pcss',\n  shadow: true,\n})\nexport class AtomicCategoryFacet implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  public facet!: CategoryFacet;\n  private dependenciesManager?: FacetConditionsManager;\n  private resultIndexToFocusOnShowMore = 0;\n  public searchStatus!: SearchStatus;\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('facet')\n  @State()\n  public facetState!: CategoryFacetState;\n  @BindStateToController('searchStatus')\n  @State()\n  public searchStatusState!: SearchStatusState;\n  @State() public error!: Error;\n\n  /**\n   * Specifies a unique identifier for the facet.\n   */\n  @Prop({mutable: true, reflect: true}) public facetId?: string;\n  /**\n   * The non-localized label for the facet.\n   * Used in the `atomic-breadbox` component through the bindings store.\n   */\n  @Prop({reflect: true}) public label = 'no-label';\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  @Prop({reflect: true}) public field!: string;\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time more values are shown.\n   */\n  @Prop({reflect: true}) public numberOfValues = 8;\n  /**\n   * Whether this facet should contain a search box.\n   *\n   */\n  @Prop({reflect: true}) public withSearch = false;\n  /**\n   * The sort criterion to apply to the returned facet values.\n   * Possible values are 'alphanumeric' and 'occurrences'.\n   * For this criterion to apply to the top-layer facet values, disable\n   * [facet value ordering](https://docs.coveo.com/en/l1qf4156/#facet-value-ordering)\n   * in your Dynamic Navigation Experience configuration.\n   */\n  // TODO: add automatic (occurrences when not expanded, alphanumeric when expanded)\n  @Prop({reflect: true}) public sortCriteria: CategoryFacetSortCriterion =\n    'occurrences';\n  /**\n   * The character that separates values of a multi-value field.\n   *\n   * *Note:* If you use the [example formatting](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-category-facet/#usage-notes) for the associated multi-value field, you must set this value to `|` or the facet won't display properly.\n   */\n  @Prop({reflect: true}) public delimitingCharacter = ';';\n  /**\n   * The base path shared by all values for the facet.\n   *\n   * Specify the property as an array using a JSON string representation:\n   * ```html\n   *  <atomic-category-facet base-path='[\"first value\", \"second value\"]' ></atomic-category-facet>\n   * ```\n   */\n  @ArrayProp()\n  @Prop({reflect: true, mutable: true})\n  public basePath: string[] | string = '[]';\n\n  /**\n   * Whether to use basePath as a filter for the results.\n   */\n  @Prop({reflect: true}) public filterByBasePath = true;\n  /**\n   * Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   */\n  @Prop({reflect: true}) public filterFacetCount = true;\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   * Minimum: `0`\n   * Default: `1000`\n   */\n  @Prop({reflect: true}) public injectionDepth = 1000;\n  // @Prop() public customSort?: string; TODO: KIT-753 Add customSort option for facet\n\n  /**\n   * The required facets and values for this facet to be displayed.\n   * Examples:\n   * ```html\n   * <atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n   *\n   * <!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n   * <atomic-category-facet\n   *   depends-on-abc\n   *   ...\n   * ></atomic-category-facet>\n   *\n   * <!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n   * <atomic-category-facet\n   *   depends-on-abc=\"doc\"\n   *   ...\n   * ></atomic-category-facet>\n   * ```\n   */\n  @MapProp() @Prop() public dependsOn: Record<string, string> = {};\n\n  private showLessFocus?: FocusTargetController;\n\n  private showMoreFocus?: FocusTargetController;\n\n  private headerFocus?: FocusTargetController;\n\n  private activeValueFocus?: FocusTargetController;\n\n  @AriaLiveRegion('facet-search')\n  protected facetSearchAriaMessage!: string;\n\n  public initialize() {\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    const options: CategoryFacetOptions = {\n      facetId: this.facetId,\n      field: this.field,\n      numberOfValues: this.numberOfValues,\n      sortCriteria: this.sortCriteria,\n      facetSearch: {numberOfValues: this.numberOfValues},\n      basePath: [...this.basePath],\n      delimitingCharacter: this.delimitingCharacter,\n      filterByBasePath: this.filterByBasePath,\n      injectionDepth: this.injectionDepth,\n      filterFacetCount: this.filterFacetCount,\n    };\n    this.facet = buildCategoryFacet(this.bindings.engine, {options});\n    announceFacetSearchResultsWithAriaLive(\n      this.facet,\n      this.label,\n      (msg) => (this.facetSearchAriaMessage = msg),\n      this.bindings.i18n\n    );\n    this.facetId = this.facet.state.facetId;\n    const facetInfo: FacetInfo = {\n      label: () => this.bindings.i18n.t(this.label),\n      facetId: this.facetId!,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n    this.bindings.store.registerFacet('categoryFacets', facetInfo);\n    initializePopover(this.host, {\n      ...facetInfo,\n      hasValues: () => !!this.facet.state.values.length,\n      numberOfActiveValues: () => (this.facetState.hasActiveValues ? 1 : 0),\n    });\n    this.initializeDependenciesManager();\n  }\n\n  private get focusTargets() {\n    if (!this.showLessFocus) {\n      this.showLessFocus = new FocusTargetController(this);\n    }\n    if (!this.showMoreFocus) {\n      this.showMoreFocus = new FocusTargetController(this);\n    }\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n    if (!this.activeValueFocus) {\n      this.activeValueFocus = new FocusTargetController(this);\n    }\n\n    return {\n      showLessFocus: this.showLessFocus,\n      showMoreFocus: this.showMoreFocus,\n      headerFocus: this.headerFocus,\n      activeValueFocus: this.activeValueFocus,\n    };\n  }\n\n  public disconnectedCallback() {\n    if (this.host.isConnected) {\n      return;\n    }\n    this.dependenciesManager?.stopWatching();\n  }\n\n  private get isHidden() {\n    return (\n      this.searchStatusState.hasError ||\n      !this.facet.state.enabled ||\n      (!this.facet.state.values.length && !this.facet.state.parents.length)\n    );\n  }\n\n  public componentShouldUpdate(\n    next: unknown,\n    prev: unknown,\n    propName: keyof AtomicCategoryFacet\n  ) {\n    if (\n      this.isCategoryFacetState(prev, propName) &&\n      this.isCategoryFacetState(next, propName)\n    ) {\n      return shouldUpdateFacetSearchComponent(\n        next.facetSearch,\n        prev.facetSearch\n      );\n    }\n    return true;\n  }\n\n  private get hasParents() {\n    return !!this.facetState.parents.length;\n  }\n\n  private initializeDependenciesManager() {\n    this.dependenciesManager = buildFacetConditionsManager(\n      this.bindings.engine,\n      {\n        facetId: this.facetId!,\n        conditions: parseDependsOn<\n          FacetValueRequest | CategoryFacetValueRequest\n        >(this.dependsOn),\n      }\n    );\n  }\n\n  private renderHeader() {\n    return (\n      <FacetHeader\n        i18n={this.bindings.i18n}\n        label={this.label}\n        numberOfActiveValues={\n          this.facetState.hasActiveValues && this.isCollapsed ? 1 : 0\n        }\n        isCollapsed={this.isCollapsed}\n        headingLevel={this.headingLevel}\n        onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\n        onClearFilters={() => {\n          this.focusTargets.headerFocus.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n        headerRef={(header) => {\n          this.focusTargets.headerFocus.setTarget(header);\n          if (!this.hasParents) {\n            this.focusTargets.activeValueFocus.setTarget(header);\n          }\n        }}\n      ></FacetHeader>\n    );\n  }\n\n  private renderSearchInput() {\n    if (!this.withSearch) {\n      return;\n    }\n\n    return (\n      <FacetSearchInput\n        i18n={this.bindings.i18n}\n        label={this.label}\n        query={this.facetState.facetSearch.query}\n        onChange={(value) => {\n          if (value === '') {\n            this.facet.facetSearch.clear();\n            return;\n          }\n          this.facet.facetSearch.updateCaptions(\n            getFieldCaptions(this.field, this.bindings.i18n)\n          );\n          this.facet.facetSearch.updateText(value);\n          this.facet.facetSearch.search();\n        }}\n        onClear={() => this.facet.facetSearch.clear()}\n      ></FacetSearchInput>\n    );\n  }\n\n  private renderValuesTree(parents: CategoryFacetValue[], isRoot: boolean) {\n    if (!this.hasParents) {\n      return this.renderChildren();\n    }\n\n    if (isRoot) {\n      return (\n        <CategoryFacetTreeValueContainer>\n          <CategoryFacetAllCategoryButton\n            i18n={this.bindings.i18n}\n            onClick={() => {\n              this.focusTargets.activeValueFocus.focusAfterSearch();\n              this.facet.deselectAll();\n            }}\n          />\n          <CategoryFacetParentAsTreeContainer isTopLevel={false}>\n            {this.renderValuesTree(parents, false)}\n          </CategoryFacetParentAsTreeContainer>\n        </CategoryFacetTreeValueContainer>\n      );\n    }\n\n    if (parents.length > 1) {\n      const parentValue = parents[0];\n\n      return (\n        <CategoryFacetTreeValueContainer>\n          <CategoryFacetParentButton\n            facetValue={parentValue}\n            field={this.field}\n            i18n={this.bindings.i18n}\n            onClick={() => {\n              this.focusTargets.activeValueFocus.focusAfterSearch();\n              this.facet.toggleSelect(parentValue);\n            }}\n          />\n          <CategoryFacetParentAsTreeContainer isTopLevel={false}>\n            {this.renderValuesTree(parents.slice(1), false)}\n          </CategoryFacetParentAsTreeContainer>\n        </CategoryFacetTreeValueContainer>\n      );\n    }\n\n    const activeParent = parents[0];\n    const activeParentDisplayValue = getFieldValueCaption(\n      this.field,\n      activeParent.value,\n      this.bindings.i18n\n    );\n\n    return (\n      <CategoryFacetParentValueLink\n        displayValue={activeParentDisplayValue}\n        numberOfResults={activeParent.numberOfResults}\n        i18n={this.bindings.i18n}\n        isLeafValue={activeParent.isLeafValue}\n        onClick={() => {\n          this.focusTargets.activeValueFocus.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n        searchQuery={this.facetState.facetSearch.query}\n        setRef={(el) => this.focusTargets.activeValueFocus.setTarget(el)}\n      >\n        <CategoryFacetChildrenAsTreeContainer>\n          {this.renderChildren()}\n        </CategoryFacetChildrenAsTreeContainer>\n      </CategoryFacetParentValueLink>\n    );\n  }\n\n  private renderChild(\n    facetValue: CategoryFacetValue,\n    isShowLessFocusTarget: boolean,\n    isShowMoreFocusTarget: boolean\n  ) {\n    const displayValue = getFieldValueCaption(\n      this.field,\n      facetValue.value,\n      this.bindings.i18n\n    );\n    const isSelected = facetValue.state === 'selected';\n    return (\n      <CategoryFacetChildValueLink\n        displayValue={displayValue}\n        i18n={this.bindings.i18n}\n        isLeafValue={facetValue.isLeafValue}\n        isSelected={isSelected}\n        numberOfResults={facetValue.numberOfResults}\n        onClick={() => {\n          this.focusTargets.activeValueFocus.focusAfterSearch();\n          this.facet.toggleSelect(facetValue);\n        }}\n        searchQuery={this.facetState.facetSearch.query}\n        setRef={(element) => {\n          isShowLessFocusTarget &&\n            this.focusTargets.showLessFocus.setTarget(element);\n          isShowMoreFocusTarget &&\n            this.focusTargets.showMoreFocus.setTarget(element);\n        }}\n      ></CategoryFacetChildValueLink>\n    );\n  }\n\n  private renderChildren() {\n    if (!this.facetState.values.length) {\n      return;\n    }\n\n    return this.facetState.values.map((value, i) =>\n      this.renderChild(value, i === 0, i === this.resultIndexToFocusOnShowMore)\n    );\n  }\n\n  private renderSearchResults() {\n    return (\n      <CategoryFacetSearchResultsContainer>\n        {this.facetState.facetSearch.values.map((value) => (\n          <CategoryFacetSearchValue\n            value={value}\n            field={this.field}\n            i18n={this.bindings.i18n}\n            searchQuery={this.facetState.facetSearch.query}\n            onClick={() => {\n              this.focusTargets.activeValueFocus.focusAfterSearch();\n              this.facet.facetSearch.select(value);\n            }}\n          ></CategoryFacetSearchValue>\n        ))}\n      </CategoryFacetSearchResultsContainer>\n    );\n  }\n\n  private renderMatches() {\n    return (\n      <FacetSearchMatches\n        i18n={this.bindings.i18n}\n        query={this.facetState.facetSearch.query}\n        numberOfMatches={this.facetState.facetSearch.values.length}\n        hasMoreMatches={this.facetState.facetSearch.moreValuesAvailable}\n        showMoreMatches={() => this.facet.facetSearch.showMoreResults()}\n      ></FacetSearchMatches>\n    );\n  }\n\n  private renderShowMoreLess() {\n    return (\n      <div class={this.hasParents ? 'pl-9' : ''}>\n        <FacetShowMoreLess\n          label={this.label}\n          i18n={this.bindings.i18n}\n          onShowMore={() => {\n            this.resultIndexToFocusOnShowMore = this.facetState.values.length;\n            this.focusTargets.showMoreFocus.focusAfterSearch();\n            this.facet.showMoreValues();\n          }}\n          onShowLess={() => {\n            this.focusTargets.showLessFocus.focusAfterSearch();\n            this.facet.showLessValues();\n          }}\n          canShowLessValues={this.facetState.canShowLessValues}\n          canShowMoreValues={this.facetState.canShowMoreValues}\n        ></FacetShowMoreLess>\n      </div>\n    );\n  }\n\n  private isCategoryFacetState(\n    state: unknown,\n    propName: string\n  ): state is CategoryFacetState {\n    return (\n      propName === 'facetState' &&\n      typeof (state as CategoryFacetState)?.facetId === 'string'\n    );\n  }\n\n  public render() {\n    const {\n      bindings: {i18n},\n      label,\n      facetState: {facetSearch, enabled, valuesAsTrees, parents},\n      searchStatusState: {hasError, firstSearchExecuted},\n    } = this;\n\n    return (\n      <FacetGuard\n        enabled={enabled}\n        firstSearchExecuted={firstSearchExecuted}\n        hasError={hasError}\n        hasResults={valuesAsTrees.length > 0}\n      >\n        {firstSearchExecuted ? (\n          <FacetContainer>\n            {this.renderHeader()}\n            {!this.isCollapsed && [\n              this.renderSearchInput(),\n              shouldDisplaySearchResults(facetSearch) ? (\n                <Fragment>\n                  {facetSearch.values.length ? (\n                    <FacetValuesGroup\n                      i18n={i18n}\n                      label={label}\n                      query={facetSearch.query}\n                    >\n                      {this.renderSearchResults()}\n                    </FacetValuesGroup>\n                  ) : (\n                    <div class=\"mt-3\"></div>\n                  )}\n                  {this.renderMatches()}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <FacetValuesGroup i18n={i18n} label={label}>\n                    {this.hasParents ? (\n                      <CategoryFacetParentAsTreeContainer\n                        isTopLevel={true}\n                        className=\"mt-3\"\n                      >\n                        {this.renderValuesTree(parents, true)}\n                      </CategoryFacetParentAsTreeContainer>\n                    ) : (\n                      <CategoryFacetChildrenAsTreeContainer className=\"mt-3\">\n                        {this.renderChildren()}\n                      </CategoryFacetChildrenAsTreeContainer>\n                    )}\n                  </FacetValuesGroup>\n                  {this.renderShowMoreLess()}\n                </Fragment>\n              ),\n            ]}\n          </FacetContainer>\n        ) : (\n          <FacetPlaceholder\n            isCollapsed={this.isCollapsed}\n            numberOfValues={this.numberOfValues}\n          />\n        )}\n      </FacetGuard>\n    );\n  }\n}\n"],"mappings":"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"}
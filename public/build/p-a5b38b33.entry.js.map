{"version":3,"names":["atomicCommerceCategoryFacetCss","AtomicCommerceCategoryFacetStyle0","AtomicCategoryFacet","this","isCollapsed","resultIndexToFocusOnShowMore","initialize","facetState","announceFacetSearchResultsWithAriaLive","facet","displayName","msg","facetSearchAriaMessage","bindings","i18n","facetInfo","label","t","facetId","element","host","isHidden","store","registerFacet","initializePopover","hasValues","values","length","numberOfActiveValues","hasActiveValues","_a","focusTargets","showLessFocus","FocusTargetController","showMoreFocus","headerFocus","activeValueFocus","disconnectedCallback","isConnected","summaryState","hasError","selectedValueAncestry","componentShouldUpdate","next","prev","propName","isCategoryFacetState","shouldUpdateFacetSearchComponent","facetSearch","hasParents","renderHeader","h","FacetHeader","headingLevel","onToggleCollapse","onClearFilters","focusAfterSearch","deselectAll","headerRef","header","setTarget","renderSearchInput","FacetSearchInput","query","onChange","value","clear","updateText","search","onClear","renderValuesTree","parents","isRoot","renderChildren","CategoryFacetTreeValueContainer","CategoryFacetAllCategoryButton","onClick","CategoryFacetParentAsTreeContainer","isTopLevel","parentValue","CategoryFacetParentButton","facetValue","field","toggleSelect","slice","activeParent","activeParentDisplayValue","getFieldValueCaption","_b","CategoryFacetParentValueLink","displayValue","numberOfResults","isLeafValue","searchQuery","setRef","el","CategoryFacetChildrenAsTreeContainer","renderChild","isShowLessFocusTarget","isShowMoreFocusTarget","isSelected","state","CategoryFacetChildValueLink","nextValues","children","map","i","renderSearchResults","CategoryFacetSearchResultsContainer","CategoryFacetSearchValue","select","renderMatches","FacetSearchMatches","numberOfMatches","hasMoreMatches","moreValuesAvailable","renderShowMoreLess","class","FacetShowMoreLess","onShowMore","showMoreValues","onShowLess","showLessValues","canShowLessValues","canShowMoreValues","render","firstRequestExecuted","FacetGuard","key","enabled","firstSearchExecuted","hasResults","FacetContainer","shouldDisplaySearchResults","Fragment","FacetValuesGroup","className","__decorate","InitializeBindings","BindStateToController","AriaLiveRegion","atomicCommerceFacetCss","AtomicCommerceFacetStyle0","AtomicCommerceFacet","initAriaLive","initPopover","isFacetState","activeValues","renderBody","FacetSearchInputGuard","numberOfDisplayedValues","withSearch","renderValues","renderValuesContainer","part","FacetSearchValue","facetValueProps","facetCount","count","onExclude","exclude","onSelect","rawValue","shouldFocusOnShowLessAfterInteraction","shouldFocusOnShowMoreAfterInteraction","FacetValue","toggleExclude","btn","showMore","showLess","filter","facetSearchQuery","displayValuesAs","enableExclusion","atomicCommerceFacetsCss","AtomicCommerceFacetsStyle0","AtomicCommerceFacets","collapseFacetsAfter","validateProps","engine","controller","controllerBuilder","facetGenerator","summary","isProductListing","interfaceElement","type","buildProductListing","buildSearch","Schema","collapseFacetAfter","NumberValue","min","required","validate","shouldCollapseFacet","index","isAppLoaded","Array","from","FacetPlaceholder","numberOfValues","facets","props","logger","warn","atomicCommerceNumericFacetCss","AtomicCommerceNumericFacetStyle0","AtomicCommerceNumericFacet","manualRanges","formatter","defaultNumberFormatter","focusTarget","registerFacetToStore","format","formatHumanReadable","numberOfSelectedValues","setFormat","event","preventDefault","stopPropagation","detail","applyNumberInput","range","start","end","shouldRenderFacet","setRanges","shouldRenderValues","shouldRenderInput","NumericFacetValuesContainer","valuesToRender","NumericFacetValueLink","hasInputRange","isLoading","hasProducts","shouldDisplayInputForFacetRange","searchStatusState","facetValues","hasInput","atomicCommerceTimeframeFacetCss","AtomicCommerceTimeframeFacetStyle0","AtomicCommerceTimeframeFacet","applyDateInput","inputRange","resetRange","undefined","formatFacetValue","startDate","deserializeRelativeDate","relativeDate","period","unit","amount","error","parseDate","renderValue","isExcluded","FacetValueLink","toggleSingleSelect","FacetValueLabelHighlight","renderDateInput","rangeGetter","rangeSetter","endInclusive"],"sources":["src/components/commerce/facets/atomic-commerce-category-facet/atomic-commerce-category-facet.pcss?tag=atomic-commerce-category-facet&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-category-facet/atomic-commerce-category-facet.tsx","src/components/commerce/facets/atomic-commerce-facet/atomic-commerce-facet.pcss?tag=atomic-commerce-facet&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-facet/atomic-commerce-facet.tsx","src/components/commerce/facets/atomic-commerce-facets/atomic-commerce-facets.pcss?tag=atomic-commerce-facets","src/components/commerce/facets/atomic-commerce-facets/atomic-commerce-facets.tsx","src/components/commerce/facets/atomic-commerce-numeric-facet/atomic-commerce-numeric-facet.pcss?tag=atomic-commerce-numeric-facet&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-numeric-facet/atomic-commerce-numeric-facet.tsx","src/components/commerce/facets/atomic-commerce-timeframe-facet/atomic-commerce-timeframe-facet.pcss?tag=atomic-commerce-timeframe-facet&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-timeframe-facet/atomic-commerce-timeframe-facet.tsx"],"sourcesContent":["@import '../../../common/facets/facet-common.pcss';\n@import '../../../common/facets/facet-search/facet-search.pcss';\n\n[part~='active-parent'] {\n  @apply pl-9;\n}\n\n[part~='parents'] [part~='values'] {\n  @apply pl-9;\n}\n\n[part~='all-categories-button'],\n[part~='parent-button'] {\n  @apply w-full py-2.5 pr-2 pl-7 text-left relative flex items-center;\n}\n\n[part~='back-arrow'] {\n  @apply h-5 w-5 absolute left-1;\n}\n","import {\n  CategoryFacetState,\n  CategoryFacetValue,\n  CategoryFacet,\n  SearchSummaryState,\n  ProductListingSummaryState,\n  Summary,\n} from '@coveo/headless/commerce';\nimport {Component, h, State, Prop, Element, Fragment} from '@stencil/core';\nimport {\n  AriaLiveRegion,\n  FocusTargetController,\n} from '../../../../utils/accessibility-utils';\nimport {getFieldValueCaption} from '../../../../utils/field-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {CategoryFacetAllCategoryButton} from '../../../common/facets/category-facet/all-categories-button';\nimport {CategoryFacetChildValueLink} from '../../../common/facets/category-facet/child-value-link';\nimport {CategoryFacetChildrenAsTreeContainer} from '../../../common/facets/category-facet/children-as-tree-container';\nimport {CategoryFacetParentAsTreeContainer} from '../../../common/facets/category-facet/parent-as-tree-container';\nimport {CategoryFacetParentButton} from '../../../common/facets/category-facet/parent-button';\nimport {CategoryFacetParentValueLink} from '../../../common/facets/category-facet/parent-value-link';\nimport {CategoryFacetSearchResultsContainer} from '../../../common/facets/category-facet/search-results-container';\nimport {CategoryFacetSearchValue} from '../../../common/facets/category-facet/search-value';\nimport {CategoryFacetTreeValueContainer} from '../../../common/facets/category-facet/value-as-tree-container';\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\nimport {FacetGuard} from '../../../common/facets/facet-guard';\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\nimport {announceFacetSearchResultsWithAriaLive} from '../../../common/facets/facet-search/facet-search-aria-live';\nimport {FacetSearchInput} from '../../../common/facets/facet-search/facet-search-input';\nimport {FacetSearchMatches} from '../../../common/facets/facet-search/facet-search-matches';\nimport {\n  shouldUpdateFacetSearchComponent,\n  shouldDisplaySearchResults,\n} from '../../../common/facets/facet-search/facet-search-utils';\nimport {FacetShowMoreLess} from '../../../common/facets/facet-show-more-less/facet-show-more-less';\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/facet-values-group';\nimport {initializePopover} from '../../../common/facets/popover/popover-type';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\n * An `atomic-commerce-category-facet` displays a facet of values in a browsable, hierarchical fashion.\n *\n * @part facet - The wrapper for the entire facet.\n * @part placeholder - The placeholder shown before the first search is executed.\n *\n * @part label-button - The button that displays the label and allows to expand/collapse the facet.\n * @part label-button-icon - The label button icon.\n *\n * @part search-wrapper - The search box wrapper.\n * @part search-input - The search box input.\n * @part search-icon - The search box submit button.\n * @part search-clear-button - The button to clear the search box of input.\n * @part more-matches - The label indicating there are more matches for the current facet search query.\n * @part no-matches - The label indicating there are no matches for the current facet search query.\n * @part matches-query - The highlighted query inside the matches labels.\n * @part search-results - The search results container.\n * @part search-result - The search result value.\n * @part search-result-path - The search result path.\n * @part search-highlight - The highlighted query inside the facet values.\n *\n * @part parents - The container surrounding the whole hierarchy of values.\n * @part sub-parents - The container surrounding a sub-hierarchy of values.\n * @part values - The container surrounding either the children of the active value or the values at the base.\n * @part all-categories-button - The \"View all\" button displayed first within the parents.\n * @part parent-button - The clickable parent button displayed first within sub-parents.\n * @part active-parent - The clickable active parent displayed first within the last sub-parents.\n * @part value-link - The clickable value displayed first within values.\n * @part back-arrow - The back arrow displayed before the clickable parents.\n * @part value-label - The facet value label within a value button.\n * @part value-count - The facet value count within a value button.\n * @part leaf-value - A facet value with no child value.\n * @part node-value - A facet value with child values.\n *\n * @part show-more - The show more results button.\n * @part show-less - The show less results button.\n * @part show-more-less-icon - The icons of the show more & show less buttons.\n *\n * @alpha\n */\n@Component({\n  tag: 'atomic-commerce-category-facet',\n  styleUrl: 'atomic-commerce-category-facet.pcss',\n  shadow: true,\n})\nexport class AtomicCategoryFacet implements InitializableComponent<Bindings> {\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() private host!: HTMLElement;\n\n  /**\n   * The summary controller instance.\n   */\n  @Prop() summary!: Summary<SearchSummaryState | ProductListingSummaryState>;\n  /**\n   * The category facet controller instance.\n   */\n  @Prop() public facet!: CategoryFacet;\n  /**\n   * Specifies whether the facet is collapsed.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The field identifier for this facet.\n   */\n  @Prop({reflect: true}) field?: string;\n\n  @BindStateToController('facet')\n  @State()\n  public facetState!: CategoryFacetState;\n\n  @BindStateToController('summary')\n  @State()\n  public summaryState!: SearchSummaryState | ProductListingSummaryState;\n\n  @State() public error!: Error;\n\n  private resultIndexToFocusOnShowMore = 0;\n  private showLessFocus?: FocusTargetController;\n  private showMoreFocus?: FocusTargetController;\n  private headerFocus?: FocusTargetController;\n  private activeValueFocus?: FocusTargetController;\n\n  @AriaLiveRegion('facet-search')\n  protected facetSearchAriaMessage!: string;\n\n  public initialize() {\n    if (!this.facetState) {\n      return;\n    }\n    announceFacetSearchResultsWithAriaLive(\n      this.facet,\n      this.displayName,\n      (msg) => (this.facetSearchAriaMessage = msg),\n      this.bindings.i18n\n    );\n    const facetInfo: FacetInfo = {\n      label: () => this.bindings.i18n.t(this.displayName),\n      facetId: this.facetState.facetId,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n    this.bindings.store.registerFacet('categoryFacets', facetInfo);\n    initializePopover(this.host, {\n      ...facetInfo,\n      hasValues: () => !!this.facetState.values.length,\n      numberOfActiveValues: () => (this.facetState.hasActiveValues ? 1 : 0),\n    });\n  }\n\n  private get displayName() {\n    return this.facetState?.displayName || 'no-label';\n  }\n\n  private get focusTargets() {\n    if (!this.showLessFocus) {\n      this.showLessFocus = new FocusTargetController(this);\n    }\n    if (!this.showMoreFocus) {\n      this.showMoreFocus = new FocusTargetController(this);\n    }\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n    if (!this.activeValueFocus) {\n      this.activeValueFocus = new FocusTargetController(this);\n    }\n\n    return {\n      showLessFocus: this.showLessFocus,\n      showMoreFocus: this.showMoreFocus,\n      headerFocus: this.headerFocus,\n      activeValueFocus: this.activeValueFocus,\n    };\n  }\n\n  public disconnectedCallback() {\n    if (this.host.isConnected) {\n      return;\n    }\n  }\n\n  private get isHidden() {\n    return (\n      this.summaryState.hasError ||\n      (!this.facetState.values.length &&\n        !this.facetState.selectedValueAncestry?.length)\n    );\n  }\n\n  public componentShouldUpdate(\n    next: unknown,\n    prev: unknown,\n    propName: keyof AtomicCategoryFacet\n  ) {\n    if (\n      this.isCategoryFacetState(prev, propName) &&\n      this.isCategoryFacetState(next, propName)\n    ) {\n      return shouldUpdateFacetSearchComponent(\n        next.facetSearch,\n        prev.facetSearch\n      );\n    }\n    return true;\n  }\n\n  private get hasParents() {\n    return !!this.facetState.selectedValueAncestry?.length;\n  }\n\n  private renderHeader() {\n    return (\n      <FacetHeader\n        i18n={this.bindings.i18n}\n        label={this.displayName}\n        numberOfActiveValues={\n          this.facetState.hasActiveValues && this.isCollapsed ? 1 : 0\n        }\n        isCollapsed={this.isCollapsed}\n        headingLevel={0}\n        onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\n        onClearFilters={() => {\n          this.focusTargets.headerFocus.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n        headerRef={(header) => {\n          this.focusTargets.headerFocus.setTarget(header);\n          if (!this.hasParents) {\n            this.focusTargets.activeValueFocus.setTarget(header);\n          }\n        }}\n      ></FacetHeader>\n    );\n  }\n\n  private renderSearchInput() {\n    return (\n      <FacetSearchInput\n        i18n={this.bindings.i18n}\n        label={this.displayName}\n        query={this.facetState.facetSearch.query}\n        onChange={(value) => {\n          if (value === '') {\n            this.facet.facetSearch.clear();\n            return;\n          }\n          this.facet.facetSearch.updateText(value);\n          this.facet.facetSearch.search();\n        }}\n        onClear={() => this.facet.facetSearch.clear()}\n      ></FacetSearchInput>\n    );\n  }\n\n  private renderValuesTree(parents: CategoryFacetValue[], isRoot: boolean) {\n    if (!this.hasParents) {\n      return this.renderChildren();\n    }\n\n    if (isRoot) {\n      return (\n        <CategoryFacetTreeValueContainer>\n          <CategoryFacetAllCategoryButton\n            i18n={this.bindings.i18n}\n            onClick={() => {\n              this.focusTargets.activeValueFocus.focusAfterSearch();\n              this.facet.deselectAll();\n            }}\n          />\n          <CategoryFacetParentAsTreeContainer isTopLevel={false}>\n            {this.renderValuesTree(parents, false)}\n          </CategoryFacetParentAsTreeContainer>\n        </CategoryFacetTreeValueContainer>\n      );\n    }\n\n    if (parents.length > 1) {\n      const parentValue = parents[0];\n\n      return (\n        <CategoryFacetTreeValueContainer>\n          <CategoryFacetParentButton\n            facetValue={parentValue}\n            field={this.facetState?.field}\n            i18n={this.bindings.i18n}\n            onClick={() => {\n              this.focusTargets.activeValueFocus.focusAfterSearch();\n              this.facet.toggleSelect(parentValue);\n            }}\n          />\n          <CategoryFacetParentAsTreeContainer isTopLevel={false}>\n            {this.renderValuesTree(parents.slice(1), false)}\n          </CategoryFacetParentAsTreeContainer>\n        </CategoryFacetTreeValueContainer>\n      );\n    }\n\n    const activeParent = parents[0];\n    const activeParentDisplayValue = getFieldValueCaption(\n      this.facetState?.field,\n      activeParent.value,\n      this.bindings.i18n\n    );\n\n    return (\n      <CategoryFacetParentValueLink\n        displayValue={activeParentDisplayValue}\n        numberOfResults={activeParent.numberOfResults}\n        i18n={this.bindings.i18n}\n        isLeafValue={activeParent.isLeafValue}\n        onClick={() => {\n          this.focusTargets.activeValueFocus.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n        searchQuery={this.facetState.facetSearch.query}\n        setRef={(el) => this.focusTargets.activeValueFocus.setTarget(el)}\n      >\n        <CategoryFacetChildrenAsTreeContainer>\n          {this.renderChildren()}\n        </CategoryFacetChildrenAsTreeContainer>\n      </CategoryFacetParentValueLink>\n    );\n  }\n\n  private renderChild(\n    facetValue: CategoryFacetValue,\n    isShowLessFocusTarget: boolean,\n    isShowMoreFocusTarget: boolean\n  ) {\n    const displayValue = getFieldValueCaption(\n      this.facetState?.field,\n      facetValue.value,\n      this.bindings.i18n\n    );\n    const isSelected = facetValue.state === 'selected';\n    return (\n      <CategoryFacetChildValueLink\n        displayValue={displayValue}\n        i18n={this.bindings.i18n}\n        isLeafValue={facetValue.isLeafValue}\n        isSelected={isSelected}\n        numberOfResults={facetValue.numberOfResults}\n        onClick={() => {\n          this.focusTargets.activeValueFocus.focusAfterSearch();\n          this.facet.toggleSelect(facetValue);\n        }}\n        searchQuery={this.facetState.facetSearch.query}\n        setRef={(element) => {\n          isShowLessFocusTarget &&\n            this.focusTargets.showLessFocus.setTarget(element);\n          isShowMoreFocusTarget &&\n            this.focusTargets.showMoreFocus.setTarget(element);\n        }}\n      ></CategoryFacetChildValueLink>\n    );\n  }\n\n  private renderChildren() {\n    const {values, selectedValueAncestry, hasActiveValues} = this.facetState;\n    const nextValues = hasActiveValues ? selectedValueAncestry : values;\n\n    const children = nextValues?.length\n      ? hasActiveValues\n        ? nextValues[nextValues.length - 1].children\n        : nextValues\n      : [];\n\n    return children.map((value, i) =>\n      this.renderChild(value, i === 0, i === this.resultIndexToFocusOnShowMore)\n    );\n  }\n\n  private renderSearchResults() {\n    return (\n      <CategoryFacetSearchResultsContainer>\n        {this.facetState.facetSearch.values.map((value) => (\n          <CategoryFacetSearchValue\n            value={value}\n            field={this.facetState?.field}\n            i18n={this.bindings.i18n}\n            searchQuery={this.facetState.facetSearch.query}\n            onClick={() => {\n              this.focusTargets.activeValueFocus.focusAfterSearch();\n              this.facet.facetSearch.select(value);\n            }}\n          ></CategoryFacetSearchValue>\n        ))}\n      </CategoryFacetSearchResultsContainer>\n    );\n  }\n\n  private renderMatches() {\n    return (\n      <FacetSearchMatches\n        i18n={this.bindings.i18n}\n        query={this.facetState.facetSearch.query}\n        numberOfMatches={this.facetState.facetSearch.values.length}\n        hasMoreMatches={this.facetState.facetSearch.moreValuesAvailable}\n      ></FacetSearchMatches>\n    );\n  }\n\n  private renderShowMoreLess() {\n    return (\n      <div class={this.hasParents ? 'pl-9' : ''}>\n        <FacetShowMoreLess\n          label={this.displayName}\n          i18n={this.bindings.i18n}\n          onShowMore={() => {\n            this.resultIndexToFocusOnShowMore = this.facetState.values.length;\n            this.focusTargets.showMoreFocus.focusAfterSearch();\n            this.facet.showMoreValues();\n          }}\n          onShowLess={() => {\n            this.focusTargets.showLessFocus.focusAfterSearch();\n            this.facet.showLessValues();\n          }}\n          canShowLessValues={this.facetState.canShowLessValues}\n          canShowMoreValues={this.facetState.canShowMoreValues}\n        ></FacetShowMoreLess>\n      </div>\n    );\n  }\n\n  private isCategoryFacetState(\n    state: unknown,\n    propName: string\n  ): state is CategoryFacetState {\n    return (\n      propName === 'facetState' &&\n      typeof (state as CategoryFacetState)?.facetId === 'string'\n    );\n  }\n\n  public render() {\n    const {\n      bindings: {i18n},\n      facetState: {facetSearch, selectedValueAncestry, values},\n    } = this;\n\n    const {hasError, firstRequestExecuted} = this.summaryState;\n\n    return (\n      <FacetGuard\n        enabled={true}\n        firstSearchExecuted={firstRequestExecuted}\n        hasError={hasError}\n        hasResults={values.length > 0}\n      >\n        {\n          <FacetContainer>\n            {this.renderHeader()}\n            {!this.isCollapsed && [\n              this.renderSearchInput(),\n              shouldDisplaySearchResults(facetSearch) ? (\n                <Fragment>\n                  {facetSearch.values.length ? (\n                    <FacetValuesGroup\n                      i18n={i18n}\n                      label={this.displayName}\n                      query={facetSearch.query}\n                    >\n                      {this.renderSearchResults()}\n                    </FacetValuesGroup>\n                  ) : (\n                    <div class=\"mt-3\"></div>\n                  )}\n                  {this.renderMatches()}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <FacetValuesGroup i18n={i18n} label={this.displayName}>\n                    {this.hasParents ? (\n                      <CategoryFacetParentAsTreeContainer\n                        isTopLevel={true}\n                        className=\"mt-3\"\n                      >\n                        {selectedValueAncestry &&\n                          this.renderValuesTree(selectedValueAncestry, true)}\n                      </CategoryFacetParentAsTreeContainer>\n                    ) : (\n                      <CategoryFacetChildrenAsTreeContainer className=\"mt-3\">\n                        {this.renderChildren()}\n                      </CategoryFacetChildrenAsTreeContainer>\n                    )}\n                  </FacetValuesGroup>\n                  {this.renderShowMoreLess()}\n                </Fragment>\n              ),\n            ]}\n          </FacetContainer>\n        }\n      </FacetGuard>\n    );\n  }\n}\n","@import '../../../../global/global.pcss';\n@import '../../../common/facets/facet-search/facet-search.pcss';\n@import '../../../common/facets/facet-common.pcss';\n@import '../../../common/facets/facet-value-checkbox/facet-value-checkbox.pcss';\n@import '../../../common/facets/facet-value-exclude/facet-value-exclude.pcss';\n@import '../../../common/facets/facet-value-box/facet-value-box.pcss';\n","import {\n  ProductListingSummaryState,\n  RegularFacet,\n  RegularFacetState,\n  SearchSummaryState,\n  Summary,\n} from '@coveo/headless/commerce';\nimport {\n  Component,\n  h,\n  State,\n  Prop,\n  Element,\n  VNode,\n  Fragment,\n} from '@stencil/core';\nimport {\n  AriaLiveRegion,\n  FocusTargetController,\n} from '../../../../utils/accessibility-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\nimport {FacetGuard} from '../../../common/facets/facet-guard';\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\nimport {announceFacetSearchResultsWithAriaLive} from '../../../common/facets/facet-search/facet-search-aria-live';\nimport {FacetSearchInput} from '../../../common/facets/facet-search/facet-search-input';\nimport {FacetSearchInputGuard} from '../../../common/facets/facet-search/facet-search-input-guard';\nimport {FacetSearchMatches} from '../../../common/facets/facet-search/facet-search-matches';\nimport {\n  shouldDisplaySearchResults,\n  shouldUpdateFacetSearchComponent,\n} from '../../../common/facets/facet-search/facet-search-utils';\nimport {FacetSearchValue} from '../../../common/facets/facet-search/facet-search-value';\nimport {FacetShowMoreLess} from '../../../common/facets/facet-show-more-less/facet-show-more-less';\nimport {\n  FacetValueProps,\n  FacetValue,\n} from '../../../common/facets/facet-value/facet-value';\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/facet-values-group';\nimport {initializePopover} from '../../../common/facets/popover/popover-type';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-facet` component renders a commerce facet that the end user can interact with to filter products.\n *\n * @part facet - The wrapper for the entire facet.\n * @part placeholder - The placeholder shown before the first search is executed.\n *\n * @part label-button - The button that displays the label and allows to expand/collapse the facet.\n * @part label-button-icon - The label button icon.\n * @part clear-button - The button that resets the actively selected facet values.\n * @part clear-button-icon - The clear button icon.\n *\n * @part search-wrapper - The search box wrapper.\n * @part search-input - The search box input.\n * @part search-icon - The search box submit button.\n * @part search-clear-button - The button to clear the search box of input.\n * @part more-matches - The label indicating there are more matches for the current facet search query.\n * @part no-matches - The label indicating there are no matches for the current facet search query.\n * @part matches-query - The highlighted query inside the matches labels.\n * @part search-highlight - The highlighted query inside the facet values.\n *\n * @part values - The facet values container.\n * @part value-label - The facet value label, common for all displays.\n * @part value-count - The facet value count, common for all displays.\n *\n * @part value-checkbox - The facet value checkbox, available when display is 'checkbox'.\n * @part value-checkbox-checked - The checked facet value checkbox, available when display is 'checkbox'.\n * @part value-checkbox-label - The facet value checkbox clickable label, available when display is 'checkbox'.\n * @part value-checkbox-icon - The facet value checkbox icon, available when display is 'checkbox'.\n * @part value-link - The facet value when display is 'link'.\n * @part value-link-selected - The selected facet value when display is 'link'.\n * @part value-box - The facet value when display is 'box'.\n * @part value-box-selected - The selected facet value when display is 'box'.\n * @part value-exclude-button - The button to exclude a facet value, available when display is 'checkbox'.\n *\n * @part show-more - The show more results button.\n * @part show-less - The show less results button.\n * @part show-more-less-icon - The icons of the show more & show less buttons.\n *\n * @alpha\n */\n@Component({\n  tag: 'atomic-commerce-facet',\n  styleUrl: 'atomic-commerce-facet.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceFacet implements InitializableComponent<Bindings> {\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() private host!: HTMLElement;\n\n  /**\n   * The Summary controller instance.\n   */\n  @Prop() summary!: Summary<SearchSummaryState | ProductListingSummaryState>;\n  /**\n   * The facet controller instance.\n   */\n  @Prop() public facet!: RegularFacet;\n  /**\n   * Specifies whether the facet is collapsed.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The field identifier for this facet.\n   */\n  @Prop({reflect: true}) field?: string;\n\n  @BindStateToController('facet')\n  @State()\n  public facetState!: RegularFacetState;\n\n  @BindStateToController('summary')\n  @State()\n  public summaryState!: SearchSummaryState | ProductListingSummaryState;\n\n  @State() public error!: Error;\n\n  private showLessFocus?: FocusTargetController;\n  private showMoreFocus?: FocusTargetController;\n  private headerFocus?: FocusTargetController;\n\n  @AriaLiveRegion('facet-search')\n  protected facetSearchAriaMessage!: string;\n\n  public initialize() {\n    if (!this.facetState) {\n      return;\n    }\n    this.initAriaLive();\n    this.initPopover();\n    this.registerFacet();\n  }\n\n  public componentShouldUpdate(\n    next: unknown,\n    prev: unknown,\n    propName: keyof AtomicCommerceFacet\n  ) {\n    if (\n      this.isFacetState(prev, propName) &&\n      this.isFacetState(next, propName)\n    ) {\n      return shouldUpdateFacetSearchComponent(\n        next.facetSearch,\n        prev.facetSearch\n      );\n    }\n    return true;\n  }\n\n  public render() {\n    if (!this.facet) {\n      return;\n    }\n    const {hasError, firstRequestExecuted} = this.summaryState;\n    return (\n      <FacetGuard\n        enabled={true}\n        hasError={hasError}\n        firstSearchExecuted={firstRequestExecuted}\n        hasResults={this.facetState.values.length > 0}\n      >\n        {\n          <FacetContainer>\n            <FacetHeader\n              i18n={this.bindings.i18n}\n              label={this.displayName}\n              onClearFilters={() => {\n                this.focusTargets.header.focusAfterSearch();\n                this.facet.deselectAll();\n              }}\n              numberOfActiveValues={this.activeValues.length}\n              isCollapsed={this.isCollapsed}\n              headingLevel={0}\n              onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\n              headerRef={(el) => this.focusTargets.header.setTarget(el)}\n            ></FacetHeader>\n            {this.renderBody()}\n          </FacetContainer>\n        }\n      </FacetGuard>\n    );\n  }\n\n  private renderBody() {\n    if (this.isCollapsed) {\n      return;\n    }\n    return (\n      <Fragment>\n        <FacetSearchInputGuard\n          canShowMoreValues={this.facetState.canShowMoreValues}\n          numberOfDisplayedValues={this.facetState.values.length}\n          withSearch={true}\n        >\n          <FacetSearchInput\n            i18n={this.bindings.i18n}\n            label={this.displayName}\n            onChange={(value) => {\n              if (value === '') {\n                this.facet.facetSearch.clear();\n                return;\n              }\n              this.facet.facetSearch.updateText(value);\n              this.facet.facetSearch.search();\n            }}\n            onClear={() => this.facet.facetSearch.clear()}\n            query={this.facetState.facetSearch.query}\n          />\n        </FacetSearchInputGuard>\n        {shouldDisplaySearchResults(this.facetState.facetSearch)\n          ? [this.renderSearchResults(), this.renderMatches()]\n          : [this.renderValues(), this.renderShowMoreLess()]}\n      </Fragment>\n    );\n  }\n\n  private renderValuesContainer(children: VNode[], query?: string) {\n    return (\n      <FacetValuesGroup\n        i18n={this.bindings.i18n}\n        label={this.displayName}\n        query={query}\n      >\n        <ul part=\"values\" class=\"mt-3\">\n          {children}\n        </ul>\n      </FacetValuesGroup>\n    );\n  }\n\n  private renderSearchResults() {\n    return this.renderValuesContainer(\n      this.facetState.facetSearch.values.map((value) => (\n        <FacetSearchValue\n          {...this.facetValueProps}\n          facetCount={value.count}\n          onExclude={() => this.facet.facetSearch.exclude(value)}\n          onSelect={() => this.facet.facetSearch.select(value)}\n          facetValue={value.rawValue}\n        />\n      ))\n    );\n  }\n\n  private renderValues() {\n    return this.renderValuesContainer(\n      this.facetState.values.map((value, i) => {\n        const shouldFocusOnShowLessAfterInteraction = i === 0;\n        const shouldFocusOnShowMoreAfterInteraction = i === 0;\n\n        return (\n          <FacetValue\n            {...this.facetValueProps}\n            facetCount={value.numberOfResults}\n            onExclude={() => this.facet.toggleExclude(value)}\n            onSelect={() => this.facet.toggleSelect(value)}\n            facetValue={value.value}\n            facetState={value.state}\n            setRef={(btn) => {\n              if (shouldFocusOnShowLessAfterInteraction) {\n                this.showLessFocus?.setTarget(btn);\n              }\n              if (shouldFocusOnShowMoreAfterInteraction) {\n                this.showMoreFocus?.setTarget(btn);\n              }\n            }}\n          />\n        );\n      })\n    );\n  }\n\n  private renderShowMoreLess() {\n    return (\n      <FacetShowMoreLess\n        label={this.displayName}\n        i18n={this.bindings.i18n}\n        onShowMore={() => {\n          this.focusTargets.showMore.focusAfterSearch();\n          this.facet.showMoreValues();\n        }}\n        onShowLess={() => {\n          this.focusTargets.showLess.focusAfterSearch();\n          this.facet.showLessValues();\n        }}\n        canShowMoreValues={this.facetState.canShowMoreValues}\n        canShowLessValues={this.facetState.canShowLessValues}\n      ></FacetShowMoreLess>\n    );\n  }\n\n  private renderMatches() {\n    return (\n      <FacetSearchMatches\n        i18n={this.bindings.i18n}\n        query={this.facetState.facetSearch.query}\n        numberOfMatches={this.facetState.facetSearch.values.length}\n        hasMoreMatches={this.facetState.facetSearch.moreValuesAvailable}\n      ></FacetSearchMatches>\n    );\n  }\n\n  private get activeValues() {\n    return this.facetState.values.filter(({state}) => state !== 'idle');\n  }\n\n  private get displayName() {\n    return this.facetState.displayName || 'no-label';\n  }\n\n  private get facetValueProps(): Pick<\n    FacetValueProps,\n    | 'facetSearchQuery'\n    | 'enableExclusion'\n    | 'field'\n    | 'i18n'\n    | 'displayValuesAs'\n  > {\n    return {\n      facetSearchQuery: this.facetState.facetSearch.query,\n      displayValuesAs: 'checkbox',\n      enableExclusion: false,\n      field: this.facetState.field,\n      i18n: this.bindings.i18n,\n    };\n  }\n\n  private get isHidden() {\n    return !this.facetState.values.length;\n  }\n\n  private registerFacet() {\n    this.bindings.store.registerFacet('facets', this.facetInfo);\n  }\n\n  private initPopover() {\n    initializePopover(this.host, {\n      ...this.facetInfo,\n      hasValues: () => !!this.facetState.values.length,\n      numberOfActiveValues: () => this.activeValues.length,\n    });\n  }\n\n  private initAriaLive() {\n    announceFacetSearchResultsWithAriaLive(\n      this.facet,\n      this.displayName,\n      (msg) => (this.facetSearchAriaMessage = msg),\n      this.bindings.i18n\n    );\n  }\n\n  private get facetInfo(): FacetInfo {\n    return {\n      label: () => this.bindings.i18n.t(this.displayName),\n      facetId: this.facetState.facetId,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n  }\n\n  private get focusTargets(): {\n    showLess: FocusTargetController;\n    showMore: FocusTargetController;\n    header: FocusTargetController;\n  } {\n    if (!this.showLessFocus) {\n      this.showLessFocus = new FocusTargetController(this);\n    }\n    if (!this.showMoreFocus) {\n      this.showMoreFocus = new FocusTargetController(this);\n    }\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n\n    return {\n      showLess: this.showLessFocus,\n      showMore: this.showMoreFocus,\n      header: this.headerFocus,\n    };\n  }\n\n  private isFacetState(\n    state: unknown,\n    propName: string\n  ): state is RegularFacetState {\n    return (\n      propName === 'facetState' &&\n      typeof (state as RegularFacetState)?.facetId === 'string'\n    );\n  }\n}\n","@import '../../../../global/global.pcss';\n","import {NumberValue, Schema} from '@coveo/bueno';\nimport {\n  RegularFacet,\n  CategoryFacet,\n  DateFacet,\n  NumericFacet,\n  FacetGeneratorState,\n  buildProductListing,\n  buildSearch,\n  FacetGenerator,\n  Summary,\n  SearchSummaryState,\n  ProductListingSummaryState,\n} from '@coveo/headless/commerce';\nimport {Component, h, Element, State, Prop, Fragment} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-facets` component automatically renders commerce facets based on the Commerce API response.\n * Unlike regular facets, which require explicit definition and request in the query, the `atomic-commerce-facets` component dynamically generates facets.\n *\n * @alpha\n */\n@Component({\n  tag: 'atomic-commerce-facets',\n  styleUrl: 'atomic-commerce-facets.pcss',\n  shadow: false,\n})\nexport class AtomicCommerceFacets implements InitializableComponent<Bindings> {\n  @InitializeBindings() public bindings!: Bindings;\n  public facetGenerator!: FacetGenerator;\n  public summary!: Summary<SearchSummaryState | ProductListingSummaryState>;\n  @Element() host!: HTMLElement;\n\n  /**\n   * The maximum number of facets to expand.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   * Using the value `-1` disables the feature and keeps all facets expanded.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 4;\n\n  @BindStateToController('facetGenerator')\n  @State()\n  public facetGeneratorState!: FacetGeneratorState;\n\n  @State() public error!: Error;\n\n  public initialize() {\n    this.validateProps();\n    const {engine} = this.bindings;\n    const controller = this.controllerBuilder(engine);\n    this.facetGenerator = controller.facetGenerator();\n    this.summary = controller.summary();\n  }\n\n  private isProductListing() {\n    return this.bindings.interfaceElement.type === 'product-listing';\n  }\n\n  private get controllerBuilder() {\n    return this.isProductListing() ? buildProductListing : buildSearch;\n  }\n\n  private validateProps() {\n    new Schema({\n      collapseFacetAfter: new NumberValue({min: -1, required: true}),\n    }).validate({\n      collapseFacetAfter: this.collapseFacetsAfter,\n    });\n  }\n\n  private shouldCollapseFacet(index: number): boolean {\n    if (this.collapseFacetsAfter === -1) {\n      return false;\n    }\n    return this.collapseFacetsAfter\n      ? index + 1 > this.collapseFacetsAfter\n      : true;\n  }\n\n  public render() {\n    if (!this.bindings.store.isAppLoaded()) {\n      return [...Array.from({length: this.collapseFacetsAfter})].map(() => (\n        <FacetPlaceholder isCollapsed={false} numberOfValues={8} />\n      ));\n    }\n    return (\n      <Fragment>\n        {this.facetGenerator.facets.map((facet, index) => {\n          if (facet.state.values.length === 0) {\n            return;\n          }\n\n          const props = <T,>() => ({\n            isCollapsed: this.shouldCollapseFacet(index),\n            summary: this.summary,\n            facet: facet as T,\n            field: facet.state.field,\n            key: facet.state.facetId,\n          });\n\n          switch (facet.state.type) {\n            case 'regular':\n              return (\n                <atomic-commerce-facet\n                  {...props<RegularFacet>()}\n                ></atomic-commerce-facet>\n              );\n            case 'numericalRange':\n              return (\n                <atomic-commerce-numeric-facet\n                  {...props<NumericFacet>()}\n                ></atomic-commerce-numeric-facet>\n              );\n            case 'dateRange':\n              return (\n                <atomic-commerce-timeframe-facet\n                  {...props<DateFacet>()}\n                ></atomic-commerce-timeframe-facet>\n              );\n            case 'hierarchical':\n              return (\n                <atomic-commerce-category-facet\n                  {...props<CategoryFacet>()}\n                ></atomic-commerce-category-facet>\n              );\n            default: {\n              this.bindings.engine.logger.warn(\n                `Unexpected facet type ${facet.state.type}.`\n              );\n              return;\n            }\n          }\n        })}\n      </Fragment>\n    );\n  }\n}\n","@import '../../../common/facets/numeric-facet-common.pcss';\n","import {\n  NumericFacet,\n  NumericFacetState,\n  NumericRangeRequest,\n  ProductListingSummaryState,\n  SearchSummaryState,\n  Summary,\n} from '@coveo/headless/commerce';\nimport {Component, Element, h, Listen, Prop, State} from '@stencil/core';\nimport {FocusTargetController} from '../../../../utils/accessibility-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {shouldDisplayInputForFacetRange} from '../../../common/facets/facet-common';\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\nimport {FacetGuard} from '../../../common/facets/facet-guard';\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\nimport {formatHumanReadable} from '../../../common/facets/numeric-facet/formatter';\nimport {NumericFacetValueLink} from '../../../common/facets/numeric-facet/value-link';\nimport {NumericFacetValuesContainer} from '../../../common/facets/numeric-facet/values-container';\nimport {initializePopover} from '../../../common/facets/popover/popover-type';\nimport {\n  defaultNumberFormatter,\n  NumberFormatter,\n} from '../../../common/formats/format-common';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport type {Range} from '../facet-number-input/atomic-commerce-facet-number-input';\n\n/**\n * The `atomic-commerce-numeric-facet` component is responsible for rendering a commerce facet that allows the user to filter products using numeric ranges.\n *\n * @internal\n */\n@Component({\n  tag: 'atomic-commerce-numeric-facet',\n  styleUrl: './atomic-commerce-numeric-facet.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceNumericFacet\n  implements InitializableComponent<Bindings>\n{\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() private host!: HTMLElement;\n\n  @State() private range?: Range;\n\n  @BindStateToController('facet')\n  @State()\n  public facetState!: NumericFacetState;\n\n  @BindStateToController('summary')\n  @State()\n  public summaryState!: SearchSummaryState | ProductListingSummaryState;\n\n  @State() public error!: Error;\n\n  private manualRanges: (NumericRangeRequest & {label?: string})[] = [];\n  private formatter: NumberFormatter = defaultNumberFormatter;\n\n  /**\n   * The Summary controller instance.\n   */\n  @Prop() summary!: Summary<SearchSummaryState | ProductListingSummaryState>;\n  /**\n   * The numeric facet controller instance.\n   */\n  @Prop({reflect: true}) public facet!: NumericFacet;\n  /**\n   * Specifies whether the facet is collapsed.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The field identifier for this facet.\n   */\n  @Prop({reflect: true}) field?: string;\n\n  private headerFocus?: FocusTargetController;\n\n  private get focusTarget(): FocusTargetController {\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n    return this.headerFocus;\n  }\n\n  public initialize() {\n    if (!this.facetState) {\n      return;\n    }\n    this.registerFacetToStore();\n  }\n\n  private registerFacetToStore() {\n    const {facetId, field} = this.facetState;\n    const facetInfo: FacetInfo = {\n      label: () => this.bindings.i18n.t(this.displayName),\n      facetId: facetId,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n\n    this.bindings.store.registerFacet('numericFacets', {\n      ...facetInfo,\n      format: (value) =>\n        formatHumanReadable({\n          facetValue: value,\n          logger: this.bindings.engine.logger,\n          i18n: this.bindings.i18n,\n          field: field,\n          manualRanges: this.manualRanges,\n          formatter: this.formatter,\n        }),\n    });\n\n    initializePopover(this.host, {\n      ...facetInfo,\n      hasValues: () => this.hasValues,\n      numberOfActiveValues: () => this.numberOfSelectedValues,\n    });\n  }\n\n  @Listen('atomic/numberFormat')\n  public setFormat(event: CustomEvent<NumberFormatter>) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.formatter = event.detail;\n  }\n\n  @Listen('atomic/numberInputApply')\n  public applyNumberInput({detail}: CustomEvent<Range>) {\n    this.range = {start: detail.start, end: detail.end};\n  }\n\n  public render() {\n    const {\n      bindings: {i18n},\n    } = this;\n    const {firstRequestExecuted, hasError} = this.summaryState;\n    return (\n      <FacetGuard\n        enabled={true}\n        firstSearchExecuted={firstRequestExecuted}\n        hasError={hasError}\n        hasResults={this.shouldRenderFacet}\n      >\n        {\n          <FacetContainer>\n            <FacetHeader\n              i18n={i18n}\n              label={this.displayName}\n              onClearFilters={() => {\n                this.focusTarget.focusAfterSearch();\n                this.facet.deselectAll();\n                this.facet.setRanges([]);\n              }}\n              numberOfActiveValues={this.numberOfSelectedValues}\n              isCollapsed={this.isCollapsed}\n              headingLevel={0}\n              onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\n              headerRef={(el) => this.focusTarget.setTarget(el)}\n            />\n            {!this.isCollapsed && [\n              this.shouldRenderValues && this.renderValues(),\n              this.shouldRenderInput && (\n                <atomic-commerce-facet-number-input\n                  bindings={this.bindings}\n                  label={this.displayName}\n                  facet={this.facet}\n                  range={this.range}\n                ></atomic-commerce-facet-number-input>\n              ),\n            ]}\n          </FacetContainer>\n        }\n      </FacetGuard>\n    );\n  }\n\n  private renderValues() {\n    const {\n      manualRanges,\n      displayName,\n      bindings: {\n        i18n,\n        engine: {logger},\n      },\n      formatter,\n    } = this;\n\n    return (\n      <NumericFacetValuesContainer i18n={i18n} label={displayName}>\n        {this.valuesToRender.map((value) => (\n          <NumericFacetValueLink\n            formatter={formatter}\n            displayValuesAs={'checkbox'}\n            facetValue={value}\n            field={this.facetState.field}\n            i18n={i18n}\n            logger={logger}\n            manualRanges={manualRanges}\n            onClick={() => this.facet.toggleSelect(value)}\n          />\n        ))}\n      </NumericFacetValuesContainer>\n    );\n  }\n\n  private get displayName() {\n    return this.facetState.displayName || 'no-label';\n  }\n\n  private get numberOfSelectedValues() {\n    if (this.range) {\n      return 1;\n    }\n\n    return (\n      this.facetState.values.filter(({state}) => state === 'selected').length ||\n      0\n    );\n  }\n\n  private get hasInputRange() {\n    return !!this.range;\n  }\n\n  private get shouldRenderValues() {\n    return !this.hasInputRange && !!this.valuesToRender.length;\n  }\n\n  private get valuesToRender() {\n    return (\n      this.facetState.values.filter(\n        (value) => value.numberOfResults || value.state !== 'idle'\n      ) || []\n    );\n  }\n\n  private get shouldRenderInput() {\n    const {\n      firstRequestExecuted: firstSearchExecuted,\n      hasError,\n      isLoading,\n      hasProducts: hasResults,\n    } = this.summaryState;\n    return shouldDisplayInputForFacetRange({\n      hasInputRange: this.hasInputRange,\n      searchStatusState: {\n        firstSearchExecuted,\n        hasError,\n        hasResults,\n        isLoading,\n      },\n      facetValues: this.facetState.values,\n      hasInput: true,\n    });\n  }\n\n  private get isHidden() {\n    return !this.shouldRenderFacet;\n  }\n\n  private get shouldRenderFacet() {\n    return this.shouldRenderInput || this.shouldRenderValues;\n  }\n\n  private get hasValues() {\n    if (this.facetState.values.length) {\n      return true;\n    }\n\n    return !!this.valuesToRender.length;\n  }\n}\n","@import '../../../common/facets/facet-common.pcss';\n","import {\n  DateFacet,\n  DateFilterRange,\n  deserializeRelativeDate,\n  DateFacetValue,\n  DateFacetState,\n  DateRangeRequest,\n  SearchSummaryState,\n  ProductListingSummaryState,\n  Summary,\n} from '@coveo/headless/commerce';\nimport {Component, Element, h, Listen, Prop, State, VNode} from '@stencil/core';\nimport {FocusTargetController} from '../../../../utils/accessibility-utils';\nimport {parseDate} from '../../../../utils/date-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {shouldDisplayInputForFacetRange} from '../../../common/facets/facet-common';\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\nimport {FacetGuard} from '../../../common/facets/facet-guard';\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\nimport {FacetValueLabelHighlight} from '../../../common/facets/facet-value-label-highlight/facet-value-label-highlight';\nimport {FacetValueLink} from '../../../common/facets/facet-value-link/facet-value-link';\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/facet-values-group';\nimport {initializePopover} from '../../../common/facets/popover/popover-type';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * A facet is a list of values for a certain field occurring in the results.\n * An `atomic-commerce-timeframe-facet` displays a facet of the results for the current query as date intervals.\n *\n * @internal\n */\n@Component({\n  tag: 'atomic-commerce-timeframe-facet',\n  styleUrl: './atomic-commerce-timeframe-facet.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceTimeframeFacet\n  implements InitializableComponent<Bindings>\n{\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() private host!: HTMLElement;\n\n  /**\n   * The summary controller instance.\n   */\n  @Prop() summary!: Summary<SearchSummaryState | ProductListingSummaryState>;\n  /**\n   * The date facet controller instance.\n   */\n  @Prop() public facet!: DateFacet;\n  /**\n   * Specifies whether the facet is collapsed.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The field identifier for this facet.\n   */\n  @Prop({reflect: true}) field?: string;\n\n  @BindStateToController('facet')\n  @State()\n  public facetState!: DateFacetState;\n\n  @BindStateToController('summary')\n  @State()\n  public summaryState!: SearchSummaryState | ProductListingSummaryState;\n\n  @State() public error!: Error;\n\n  @State() private inputRange?: DateFilterRange;\n\n  private headerFocus?: FocusTargetController;\n\n  private get displayName() {\n    return this.facetState.displayName || 'no-label';\n  }\n\n  private get focusTarget(): FocusTargetController {\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n    return this.headerFocus;\n  }\n\n  public initialize() {\n    if (!this.facetState) {\n      return;\n    }\n    this.registerFacetToStore();\n  }\n\n  @Listen('atomic/dateInputApply')\n  public applyDateInput({detail}: CustomEvent<DateFilterRange>) {\n    this.inputRange = {start: detail.start, end: detail.end};\n  }\n\n  private get valuesToRender() {\n    return (\n      this.facetState.values.filter(\n        (value) => value.numberOfResults || value.state !== 'idle'\n      ) || []\n    );\n  }\n\n  private get shouldRenderValues() {\n    return !this.hasInputRange && !!this.valuesToRender.length;\n  }\n\n  private get shouldRenderFacet() {\n    return this.shouldRenderInput || this.shouldRenderValues;\n  }\n\n  private get shouldRenderInput() {\n    const {\n      firstRequestExecuted: firstSearchExecuted,\n      hasError,\n      isLoading,\n      hasProducts: hasResults,\n    } = this.summaryState;\n    return shouldDisplayInputForFacetRange({\n      hasInputRange: this.hasInputRange,\n      searchStatusState: {\n        firstSearchExecuted,\n        hasError,\n        hasResults,\n        isLoading,\n      },\n      facetValues: this.facetState.values || [],\n      hasInput: true,\n    });\n  }\n\n  private get hasValues() {\n    if (this.facetState.values.length) {\n      return true;\n    }\n\n    return !!this.valuesToRender.length;\n  }\n\n  private get numberOfSelectedValues() {\n    if (this.hasInputRange) {\n      return 1;\n    }\n\n    return (\n      this.facetState.values.filter(({state}) => state === 'selected').length ||\n      0\n    );\n  }\n\n  private get hasInputRange() {\n    return !!this.inputRange;\n  }\n\n  public disconnectedCallback() {\n    if (this.host.isConnected) {\n      return;\n    }\n  }\n\n  private get isHidden() {\n    return !this.shouldRenderFacet;\n  }\n\n  private resetRange() {\n    this.inputRange = undefined;\n    this.facet.setRanges([]);\n  }\n\n  private registerFacetToStore() {\n    const facetInfo: FacetInfo = {\n      label: () => this.bindings.i18n.t(this.displayName),\n      facetId: this.facetState.facetId,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n\n    this.bindings.store.registerFacet('dateFacets', {\n      ...facetInfo,\n      format: (value) => this.formatFacetValue(value),\n    });\n\n    initializePopover(this.host, {\n      ...facetInfo,\n      hasValues: () => this.hasValues,\n      numberOfActiveValues: () => this.numberOfSelectedValues,\n    });\n  }\n\n  private formatFacetValue(facetValue: DateFacetValue) {\n    try {\n      const startDate = deserializeRelativeDate(facetValue.start);\n      const relativeDate =\n        startDate.period === 'past'\n          ? startDate\n          : deserializeRelativeDate(facetValue.end);\n\n      return this.bindings.i18n.t(\n        `${relativeDate.period}-${relativeDate.unit}`,\n        {\n          count: relativeDate.amount,\n        }\n      );\n    } catch (error) {\n      return this.bindings.i18n.t('to', {\n        start: parseDate(facetValue.start).format('YYYY-MM-DD'),\n        end: parseDate(facetValue.end).format('YYYY-MM-DD'),\n      });\n    }\n  }\n  private renderValues() {\n    return this.renderValuesContainer(\n      this.valuesToRender.map((value) => this.renderValue(value))\n    );\n  }\n\n  private renderValue(facetValue: DateFacetValue) {\n    const displayValue = this.formatFacetValue(facetValue);\n    const isSelected = facetValue.state === 'selected';\n    const isExcluded = facetValue.state === 'excluded';\n    return (\n      <FacetValueLink\n        displayValue={displayValue}\n        isSelected={isSelected}\n        numberOfResults={facetValue.numberOfResults}\n        i18n={this.bindings.i18n}\n        onClick={() => this.facet.toggleSingleSelect(facetValue)}\n      >\n        <FacetValueLabelHighlight\n          displayValue={displayValue}\n          isSelected={isSelected}\n          isExcluded={isExcluded}\n        ></FacetValueLabelHighlight>\n      </FacetValueLink>\n    );\n  }\n\n  private renderValuesContainer(children: VNode[]) {\n    return (\n      <FacetValuesGroup i18n={this.bindings.i18n} label={this.displayName}>\n        <ul class=\"mt-3\" part=\"values\">\n          {children}\n        </ul>\n      </FacetValuesGroup>\n    );\n  }\n\n  private renderHeader() {\n    return (\n      <FacetHeader\n        i18n={this.bindings.i18n}\n        label={this.displayName}\n        onClearFilters={() => {\n          this.focusTarget.focusAfterSearch();\n          if (this.hasInputRange) {\n            this.resetRange();\n            return;\n          }\n          this.facet.deselectAll();\n        }}\n        numberOfActiveValues={this.numberOfSelectedValues}\n        isCollapsed={this.isCollapsed}\n        headingLevel={0}\n        onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\n        headerRef={(el) => this.focusTarget.setTarget(el)}\n      ></FacetHeader>\n    );\n  }\n\n  private renderDateInput() {\n    return (\n      <atomic-facet-date-input\n        bindings={this.bindings}\n        label={this.displayName}\n        rangeGetter={() => this.inputRange}\n        facetId={this.facetState.facetId}\n        rangeSetter={({start, end, endInclusive}: DateRangeRequest) => {\n          this.facet.setRanges([\n            {\n              start,\n              end,\n              endInclusive,\n              state: 'selected',\n            },\n          ]);\n        }}\n      ></atomic-facet-date-input>\n    );\n  }\n\n  public render() {\n    const {hasError, firstRequestExecuted} = this.summaryState;\n\n    return (\n      <FacetGuard\n        enabled={true}\n        firstSearchExecuted={firstRequestExecuted}\n        hasError={hasError}\n        hasResults={this.shouldRenderFacet}\n      >\n        {\n          <FacetContainer>\n            {this.renderHeader()}\n            {!this.isCollapsed && [\n              this.shouldRenderValues && this.renderValues(),\n              this.shouldRenderInput && this.renderDateInput(),\n            ]}\n          </FacetContainer>\n        }\n      </FacetGuard>\n    );\n  }\n}\n"],"mappings":"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"}
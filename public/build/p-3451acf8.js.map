{"version":3,"names":["MIN_VALUES_WHERE_FACET_SEARCH_IMPROVES_UX","FacetSearchInputGuard","withSearch","canShowMoreValues","numberOfDisplayedValues","children","h","Fragment","FacetSearchValue","props","FacetValue","facetState"],"sources":["src/components/common/facets/facet-search/facet-search-input-guard.tsx","src/components/common/facets/facet-search/facet-search-value.tsx"],"sourcesContent":["import {Fragment, FunctionalComponent, h} from '@stencil/core';\n\nconst MIN_VALUES_WHERE_FACET_SEARCH_IMPROVES_UX = 9;\n\ninterface FacetSearchInputGuardProps {\n  withSearch: boolean;\n  canShowMoreValues: boolean;\n  numberOfDisplayedValues: number;\n}\n\nexport const FacetSearchInputGuard: FunctionalComponent<\n  FacetSearchInputGuardProps\n> = ({withSearch, canShowMoreValues, numberOfDisplayedValues}, children) => {\n  if (!withSearch) {\n    return;\n  }\n\n  // Hide the input if there are no more values to load from the index and there are less than 8 values to display.\n  // 8 is an arbitrary number, discussed with UX as a good compromise: A list long enough where it's worth searching.\n  if (\n    !canShowMoreValues &&\n    numberOfDisplayedValues < MIN_VALUES_WHERE_FACET_SEARCH_IMPROVES_UX\n  ) {\n    return;\n  }\n\n  return <Fragment>{children}</Fragment>;\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {FacetValueProps, FacetValue} from '../facet-value/facet-value';\n\nexport const FacetSearchValue: FunctionalComponent<\n  Omit<FacetValueProps, 'facetState' | 'setRef'>\n> = (props) => {\n  return <FacetValue {...props} facetState=\"idle\" />;\n};\n"],"mappings":"+EAEA,MAAMA,EAA4C,E,MAQrCC,EAET,EAAEC,aAAYC,oBAAmBC,2BAA0BC,KAC7D,IAAKH,EAAY,CACf,M,CAKF,IACGC,GACDC,EAA0BJ,EAC1B,CACA,M,CAGF,OAAOM,EAACC,EAAQ,KAAEF,EAAoB,E,MCvB3BG,EAERC,GACIH,EAACI,EAAU,IAAKD,EAAOE,WAAW,gB"}
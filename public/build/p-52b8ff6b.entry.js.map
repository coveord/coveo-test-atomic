{"version":3,"names":["getStringValueFromProductOrNull","product","field","value","ProductTemplatesHelpers","getProductProperty","trim","AtomicProductText","this","shouldHighlight","shouldRenderHighlights","isFieldSupportedForHighlighting","includes","render","productValueAsString","h","ItemTextFallback","host","logger","bindings","engine","defaultValue","default","item","getProperty","getFieldValueCaption","i18n","textValue","highlightKeywords","ItemTextHighlighted","highlightString","HighlightUtils","onError","error","__decorate","InitializeBindings","ProductContext"],"sources":["src/components/commerce/product-template-components/product-utils.ts","src/components/commerce/product-template-components/atomic-product-text/atomic-product-text.tsx"],"sourcesContent":["import {Product, ProductTemplatesHelpers} from '@coveo/headless/commerce';\n\nexport function getStringValueFromProductOrNull(\n  product: Product,\n  field: string\n) {\n  const value = ProductTemplatesHelpers.getProductProperty(product, field);\n\n  if (typeof value !== 'string' || value.trim() === '') {\n    return null;\n  }\n\n  return value;\n}\n","import {\n  Product,\n  ProductTemplatesHelpers,\n  HighlightUtils,\n} from '@coveo/headless/commerce';\nimport {Component, h, Prop, Element, State} from '@stencil/core';\nimport {getFieldValueCaption} from '../../../../utils/field-utils';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {ItemTextFallback} from '../../../common/item-text/item-text-fallback';\nimport {ItemTextHighlighted} from '../../../common/item-text/item-text-highlighted';\nimport {CommerceBindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductContext} from '../product-template-decorators';\nimport {getStringValueFromProductOrNull} from '../product-utils';\n\n/**\n * @internal\n * The `atomic-product-text` component renders the value of a string product field.\n */\n@Component({\n  tag: 'atomic-product-text',\n  shadow: false,\n})\nexport class AtomicProductText\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  @State() public error!: Error;\n\n  @ProductContext() private product!: Product;\n\n  @Element() private host!: HTMLElement;\n\n  /**\n   * The product field which the component should use.\n   * This will look in the Product object first, and then in the product.additionalFields object for the fields.\n   */\n  @Prop({reflect: true}) public field!: string;\n  /**\n   * When this is set to `true`, the component attempts to highlight text based on the highlighting properties provided by the search API response.\n   * This property only works for the product excerpt and the ec_name field.\n   */\n  @Prop({reflect: true}) public shouldHighlight = true;\n  /**\n   * The locale key for the text to display when the configured field has no value.\n   */\n  @Prop({reflect: true}) public default?: string;\n\n  private get shouldRenderHighlights() {\n    return this.shouldHighlight && this.isFieldSupportedForHighlighting();\n  }\n\n  public isFieldSupportedForHighlighting() {\n    return ['ec_name', 'excerpt'].includes(this.field);\n  }\n\n  public render() {\n    const productValueAsString = getStringValueFromProductOrNull(\n      this.product,\n      this.field\n    );\n\n    if (productValueAsString === null) {\n      return (\n        <ItemTextFallback\n          field={this.field}\n          host={this.host}\n          logger={this.bindings.engine.logger}\n          defaultValue={this.default}\n          item={this.product}\n          getProperty={ProductTemplatesHelpers.getProductProperty}\n        >\n          <atomic-commerce-text\n            value={getFieldValueCaption(\n              this.field,\n              this.default!,\n              this.bindings.i18n\n            )}\n          ></atomic-commerce-text>\n        </ItemTextFallback>\n      );\n    }\n\n    const textValue = `${productValueAsString}`;\n    const highlightKeywords = ProductTemplatesHelpers.getProductProperty(\n      this.product,\n      this.field === 'ec_name' ? 'nameHighlights' : 'excerptHighlights'\n    ) as HighlightUtils.HighlightKeyword[];\n\n    return this.shouldRenderHighlights && highlightKeywords ? (\n      <ItemTextHighlighted\n        textValue={textValue}\n        highlightKeywords={highlightKeywords}\n        highlightString={HighlightUtils.highlightString}\n        onError={(error) => (this.error = error)}\n      ></ItemTextHighlighted>\n    ) : (\n      <atomic-commerce-text\n        value={getFieldValueCaption(this.field, textValue, this.bindings.i18n)}\n      ></atomic-commerce-text>\n    );\n  }\n}\n"],"mappings":"qXAEgBA,EACdC,EACAC,GAEA,MAAMC,EAAQC,EAAwBC,mBAAmBJ,EAASC,GAElE,UAAWC,IAAU,UAAYA,EAAMG,SAAW,GAAI,CACpD,OAAO,I,CAGT,OAAOH,CACT,C,iXCYaI,EAAiB,M,yBAmBEC,KAAAC,gBAAkB,K,+DAAA,K,uBAMhD,0BAAYC,GACV,OAAOF,KAAKC,iBAAmBD,KAAKG,iC,CAG/B,+BAAAA,GACL,MAAO,CAAC,UAAW,WAAWC,SAASJ,KAAKN,M,CAGvC,MAAAW,GACL,MAAMC,EAAuBd,EAC3BQ,KAAKP,QACLO,KAAKN,OAGP,GAAIY,IAAyB,KAAM,CACjC,OACEC,EAACC,EAAgB,CACfd,MAAOM,KAAKN,MACZe,KAAMT,KAAKS,KACXC,OAAQV,KAAKW,SAASC,OAAOF,OAC7BG,aAAcb,KAAKc,QACnBC,KAAMf,KAAKP,QACXuB,YAAapB,EAAwBC,oBAErCU,EAAA,wBACEZ,MAAOsB,EACLjB,KAAKN,MACLM,KAAKc,QACLd,KAAKW,SAASO,Q,CAOxB,MAAMC,EAAY,GAAGb,IACrB,MAAMc,EAAoBxB,EAAwBC,mBAChDG,KAAKP,QACLO,KAAKN,QAAU,UAAY,iBAAmB,qBAGhD,OAAOM,KAAKE,wBAA0BkB,EACpCb,EAACc,EAAmB,CAClBF,UAAWA,EACXC,kBAAmBA,EACnBE,gBAAiBC,EAAeD,gBAChCE,QAAUC,GAAWzB,KAAKyB,MAAQA,IAGpClB,EAAA,wBACEZ,MAAOsB,EAAqBjB,KAAKN,MAAOyB,EAAWnB,KAAKW,SAASO,O,6BAxE1CQ,EAAA,CAA5BC,K,+BAGyBD,EAAA,CAAzBE,K"}
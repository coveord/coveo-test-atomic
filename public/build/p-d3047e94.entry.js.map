{"version":3,"names":["atomicCommerceDidYouMeanCss","AtomicCommerceDidYouMeanStyle0","AtomicCommerceDidYouMean","initialize","this","bindings","interfaceElement","type","error","Error","didYouMean","buildSearch","engine","queryTrigger","buildQueryTrigger","content","didYouMeanState","queryTriggerState","hasQueryCorrection","wasAutomaticallyCorrected","hasTrigger","wasQueryModified","h","AutoCorrection","correctedTo","wasCorrectedTo","originalQuery","i18n","Correction","correctedQuery","queryCorrection","onClick","TriggerCorrection","newQuery","undo","render","QueryCorrectionGuard","hasCorrection","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/commerce/atomic-commerce-did-you-mean/atomic-commerce-did-you-mean.pcss?tag=atomic-commerce-did-you-mean&encapsulation=shadow","src/components/commerce/atomic-commerce-did-you-mean/atomic-commerce-did-you-mean.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {\n  DidYouMeanState,\n  DidYouMean,\n  buildSearch,\n  QueryTrigger,\n  buildQueryTrigger,\n  QueryTriggerState,\n} from '@coveo/headless/commerce';\nimport {Component, State, h} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {AutoCorrection} from '../../common/query-correction/auto-correction';\nimport {Correction} from '../../common/query-correction/correction';\nimport {QueryCorrectionGuard} from '../../common/query-correction/guard';\nimport {TriggerCorrection} from '../../common/query-correction/trigger-correction';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * @internal\n *\n * The `atomic-commerce-query-correction` component is responsible for handling query corrections. When a query returns no products but finds a possible query correction, the component either suggests the correction or automatically triggers a new query with the suggested term.\n *\n * @part no-results - The text displayed when there are no results.\n * @part auto-corrected - The text displayed for the automatically corrected query.\n * @part showing-results-for - The first paragraph of the text displayed when a query trigger changes a query.\n * @part search-instead-for - The second paragraph of the text displayed when a query trigger changes a query.\n * @part did-you-mean - The text displayed around the button to manually correct a query.\n * @part correction-btn - The button used to manually correct a query.\n * @part undo-btn - The button used to undo a query changed by a query trigger.\n * @part highlight - The query highlights.\n */\n@Component({\n  tag: 'atomic-commerce-did-you-mean',\n  styleUrl: 'atomic-commerce-did-you-mean.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceDidYouMean\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  didYouMean!: DidYouMean;\n  queryTrigger!: QueryTrigger;\n\n  @BindStateToController('didYouMean')\n  @State()\n  private didYouMeanState?: DidYouMeanState;\n  @BindStateToController('queryTrigger')\n  @State()\n  private queryTriggerState?: QueryTriggerState;\n  @State()\n  public error!: Error;\n\n  public initialize() {\n    if (this.bindings.interfaceElement.type !== 'search') {\n      this.error = new Error(\n        'atomic-commerce-did-you-mean is only usable with an atomic-commerce-interface of type \"search\"'\n      );\n    }\n\n    this.didYouMean = buildSearch(this.bindings.engine).didYouMean();\n    this.queryTrigger = buildQueryTrigger(this.bindings.engine);\n  }\n\n  private get content() {\n    if (!this.didYouMeanState || !this.queryTriggerState) {\n      return;\n    }\n\n    const {hasQueryCorrection, wasAutomaticallyCorrected} =\n      this.didYouMeanState;\n    const hasTrigger = this.queryTriggerState.wasQueryModified;\n\n    if (hasQueryCorrection && wasAutomaticallyCorrected) {\n      return (\n        <AutoCorrection\n          correctedTo={this.didYouMeanState.wasCorrectedTo}\n          originalQuery={this.didYouMeanState.originalQuery}\n          i18n={this.bindings.i18n}\n        />\n      );\n    }\n    if (hasQueryCorrection) {\n      return (\n        <Correction\n          correctedQuery={this.didYouMeanState.queryCorrection.correctedQuery}\n          i18n={this.bindings.i18n}\n          onClick={() => {}}\n        />\n      );\n    }\n    if (hasTrigger) {\n      return (\n        <TriggerCorrection\n          i18n={this.bindings.i18n}\n          correctedQuery={this.queryTriggerState.newQuery}\n          originalQuery={this.queryTriggerState.originalQuery}\n          onClick={() => this.queryTrigger.undo()}\n        />\n      );\n    }\n  }\n\n  public render() {\n    if (!this.didYouMeanState || !this.queryTriggerState) {\n      return;\n    }\n\n    return (\n      <QueryCorrectionGuard\n        hasCorrection={\n          this.didYouMeanState.hasQueryCorrection ||\n          this.queryTriggerState.wasQueryModified\n        }\n      >\n        {this.content}\n      </QueryCorrectionGuard>\n    );\n  }\n}\n"],"mappings":"qRAAA,MAAMA,EAA8B,wguCACpC,MAAAC,EAAeD,E,iXCsCFE,EAAwB,M,8GAgB5B,UAAAC,GACL,GAAIC,KAAKC,SAASC,iBAAiBC,OAAS,SAAU,CACpDH,KAAKI,MAAQ,IAAIC,MACf,iG,CAIJL,KAAKM,WAAaC,EAAYP,KAAKC,SAASO,QAAQF,aACpDN,KAAKS,aAAeC,EAAkBV,KAAKC,SAASO,O,CAGtD,WAAYG,GACV,IAAKX,KAAKY,kBAAoBZ,KAAKa,kBAAmB,CACpD,M,CAGF,MAAMC,mBAACA,EAAkBC,0BAAEA,GACzBf,KAAKY,gBACP,MAAMI,EAAahB,KAAKa,kBAAkBI,iBAE1C,GAAIH,GAAsBC,EAA2B,CACnD,OACEG,EAACC,EAAc,CACbC,YAAapB,KAAKY,gBAAgBS,eAClCC,cAAetB,KAAKY,gBAAgBU,cACpCC,KAAMvB,KAAKC,SAASsB,M,CAI1B,GAAIT,EAAoB,CACtB,OACEI,EAACM,EAAU,CACTC,eAAgBzB,KAAKY,gBAAgBc,gBAAgBD,eACrDF,KAAMvB,KAAKC,SAASsB,KACpBI,QAAS,Q,CAIf,GAAIX,EAAY,CACd,OACEE,EAACU,EAAiB,CAChBL,KAAMvB,KAAKC,SAASsB,KACpBE,eAAgBzB,KAAKa,kBAAkBgB,SACvCP,cAAetB,KAAKa,kBAAkBS,cACtCK,QAAS,IAAM3B,KAAKS,aAAaqB,Q,EAMlC,MAAAC,GACL,IAAK/B,KAAKY,kBAAoBZ,KAAKa,kBAAmB,CACpD,M,CAGF,OACEK,EAACc,EAAoB,CACnBC,cACEjC,KAAKY,gBAAgBE,oBACrBd,KAAKa,kBAAkBI,kBAGxBjB,KAAKW,Q,GA3EiBuB,EAAA,CAA5BC,K,+BAMOD,EAAA,CAFPE,EAAsB,e,sCAKfF,EAAA,CAFPE,EAAsB,iB"}